{"version":3,"sources":["dbbackup/src/DbBackupUtility.js"],"names":["$","Craft","DbBackupUtility","Garnish","Base","extend","$trigger","$form","formId","$status","addListener","this","preventDefault","onSubmit","progressBar","ev","resetProgressBar","$progressBar","velocity","ProgressBar","proxy","removeClass","downloadFromUrl","getActionUrl","updateProgressBar","opacity","onComplete","prop","serialize","then","setTimeout","bind","cp","displayError","t","postActionRequest","response","textStatus","$allDone","css","showAllDone","trigger","setProgressPercentage","complete","appendTo","duration","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,gBAAkBC,QAAQC,KAAKC,OAE7BC,CACOA,SAFX,KAIUC,MAAA,KAEGD,KAAAA,SAAaE,GACbC,KAAUT,MAAEA,EAAA,IAAAQ,GAEZE,KAAAA,SAAiBH,EAAtB,eAAuCI,KAAvCJ,OATRI,KAAAF,QAAAT,EAAA,kBAAAW,KAAAJ,OAaWK,KAAAA,YAAHD,KAAAJ,MAAA,SAAA,aAGQM,SAAMC,SAAaC,GACdD,EAAAA,iBAEAA,KAALR,SAAiBU,SAAjB,cACHL,KAAAG,YAIDH,KAAiBM,YAAaC,mBAP1BP,KAAKG,YAAc,IAAIb,MAAMkB,YAAYR,KAAKF,SAYhCT,KAAEoB,YAAMH,aAAWI,YAAA,UAEfC,KAAAA,YAAgBL,aAAcM,SAAAA,QAAaL,SAEpCM,CACMC,QAAKC,GAGhB,CACKA,SAAL1B,EAAAoB,MAAA,WAPRpB,EAAA,oBAAA2B,KAAA,WASG1B,MAAAqB,gBAAA,OAAArB,MAAAsB,aAAA,sCAAAZ,KAAAJ,MAAAqB,aACqBC,KAAA,WACpBlB,KAAAa,oBARIM,WAAWnB,KAAKe,WAAWK,KAAKpB,MAAO,MASxBoB,KAAWpB,OACVe,MAAWK,WACxB9B,MAAA+B,GAAAC,aAAAhC,MAAAiC,EAAA,MAAA,+EACmBjC,KAAQyB,YAAO,IACrCK,KAAApB,OANRV,MAAAkC,kBAAA,qCAAA,SAAAC,EAAAC,GASH1B,KAAAa,oBArBK,YAAAa,EALlBP,WAAAnB,KAAAe,WAAAK,KAAApB,MAAA,MA8BmBV,MAAA+B,GAAAC,aAAAhC,MAAAiC,EAAA,MAAA,+EACfvB,KAAAe,YAAA,KANcK,KAAKpB,QAUDoB,KAAApB,SAIXA,KAAA2B,UACf3B,KAAA2B,SAAAC,IAAA,UAAA,GAIQ5B,KAAAL,SAASkC,SAAa,YACpBF,KAAVhC,SAAoBmC,QAAA,UANxBjB,kBAAmB,WAWgCb,KAAEG,YAAA4B,sBAAhCzB,MACK0B,WAAYvB,SAAMoB,GACrBA,KAAAA,WACFF,KAALA,SAAuBtC,EAAA,4CAAA4C,SAAAjC,KAAAF,SAACgB,KAASa,SAAAC,IAAA,UAAA,IAAjC5B,KAAAG,YAAAG,aAAAC,SAAA,CAAAO,QAAA,GAAA,CACHoB,SAAA,OAAAF,SAAA3C,EAAAoB,OAAA,gBAF0B,IAAhBoB,IAA+C,IAAhBA,GAI5BnB,KAAAA,SAAYH,SAA1B,CAAAO,QAAA,GAAA,CAAAoB,SAAA,SANRlC,KAAAL,SAAAe,YAAA,YAUHV,KAAAL,SAAAmC,QAAA,WArFT9B,WADJ,CAwFGmC","file":"DbBackupUtility.min.js","sourcesContent":["(function($) {\n    Craft.DbBackupUtility = Garnish.Base.extend(\n        {\n            $trigger: null,\n            $form: null,\n\n            init: function(formId) {\n                this.$form = $('#' + formId);\n                this.$trigger = $('input.submit', this.$form);\n                this.$status = $('.utility-status', this.$form);\n\n                this.addListener(this.$form, 'submit', 'onSubmit');\n            },\n\n            onSubmit: function(ev) {\n                ev.preventDefault();\n\n                if (!this.$trigger.hasClass('disabled')) {\n                    if (!this.progressBar) {\n                        this.progressBar = new Craft.ProgressBar(this.$status);\n                    } else {\n                        this.progressBar.resetProgressBar();\n                    }\n\n                    this.progressBar.$progressBar.removeClass('hidden');\n\n                    this.progressBar.$progressBar.velocity('stop').velocity(\n                        {\n                            opacity: 1\n                        },\n                        {\n                            complete: $.proxy(function() {\n                                if (($('#download-backup').prop('checked'))) {\n                                    Craft.downloadFromUrl('POST', Craft.getActionUrl('utilities/db-backup-perform-action'), this.$form.serialize())\n                                        .then(function() {\n                                            this.updateProgressBar();\n                                            setTimeout(this.onComplete.bind(this), 300);\n                                        }.bind(this))\n                                        .catch(function() {\n                                            Craft.cp.displayError(Craft.t('app', 'There was a problem backing up your database. Please check the Craft logs.'));\n                                            this.onComplete(false);\n                                        }.bind(this));\n                                } else {\n                                    Craft.postActionRequest('utilities/db-backup-perform-action', function(response, textStatus) {\n                                        this.updateProgressBar();\n                                        if (textStatus === 'success') {\n                                            setTimeout(this.onComplete.bind(this), 300);\n                                        } else {\n                                            Craft.cp.displayError(Craft.t('app', 'There was a problem backing up your database. Please check the Craft logs.'));\n                                            this.onComplete(false);\n                                        }\n                                    }.bind(this))\n                                }\n                            }.bind(this))\n                        });\n\n                    if (this.$allDone) {\n                        this.$allDone.css('opacity', 0);\n                    }\n\n                    this.$trigger.addClass('disabled');\n                    this.$trigger.trigger('blur');\n                }\n            },\n\n            updateProgressBar: function() {\n                var width = 100;\n                this.progressBar.setProgressPercentage(width);\n            },\n\n            onComplete: function(showAllDone) {\n                if (!this.$allDone) {\n                    this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.progressBar.$progressBar.velocity({opacity: 0}, {\n                    duration: 'fast', complete: $.proxy(function() {\n                        if (typeof showAllDone === 'undefined' || showAllDone === true) {\n                            this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                        }\n\n                        this.$trigger.removeClass('disabled');\n                        this.$trigger.trigger('focus');\n                    }, this)\n                });\n            }\n        });\n})(jQuery);\n"]}