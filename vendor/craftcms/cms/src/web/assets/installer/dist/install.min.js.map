{"version":3,"sources":["installer/src/install.js"],"names":["$","Craft","Installer","Garnish","Base","extend","$bg","$screens","$dots","$currentScreen","$currentDot","$dbPortInput","modal","currentScreen","loading","$dbDriverInput","children","updateDbPortInput","addListener","find","PasswordInput","this","Modal","removeClass","shadeClass","showModal","show","attr","hideOnEsc","val","driver","handleScreenSubmit","preventDefault","defaultDbPorts","defaultPort","port","validate","ev","getScreenInputNames","inputsStr","inputs","includePrefix","gotoNextScreen","what","$screen","split","showInstallScreen","data","i","length","input","$input","getInputPostVal","postActionRequest","noop","response","textStatus","eq","remove","getInputData","proxy","complete","text","$h1","success","t","setTimeout","window","location","href","getUrl","hide","insertAfter","add","appendTo","gotoScreen","j","addClass","trigger","action","$submitBtn","insertBefore","hasOwnProperty","errors","$elements","removeListener","class","$errors","shake","mysql","pgsql","$win","on","installer","jQuery"],"mappings":"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","file":"install.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.Installer = Garnish.Base.extend(\n        {\n            $bg: null,\n            $screens: null,\n            $dots: null,\n            $currentScreen: null,\n            $currentDot: null,\n\n            $dbDriverInput: null,\n            $dbPortInput: null,\n\n            modal: null,\n            currentScreen: null,\n            loading: false,\n\n            /**\n             * Constructor\n             */\n            init: function() {\n                this.$bg = $('#bg');\n                this.$screens = $('#screens').children();\n                this.$dbDriverInput = $('#db-driver');\n                this.$dbPortInput = $('#db-port');\n\n                this.updateDbPortInput();\n\n                this.addListener(this.$screens.find('form'), 'submit', 'handleScreenSubmit');\n                this.addListener(this.$screens.find('.btn.submit'), 'activate', 'handleScreenSubmit');\n\n                this.addListener($('#beginbtn'), 'activate', 'showModal');\n                this.addListener(this.$dbDriverInput, 'change', 'updateDbPortInput');\n\n                new Craft.PasswordInput('#account-password');\n            },\n\n            showModal: function() {\n                if (!this.modal) {\n                    this.modal = new Garnish.Modal($('#install-modal').removeClass('hidden'), {\n                        hideOnEsc: false,\n                        shadeClass: ''\n                    });\n                    this.gotoScreen(1);\n                } else {\n                    this.modal.show();\n                }\n            },\n\n            updateDbPortInput: function() {\n                var driver = this.$dbDriverInput.val();\n                var port = this.$dbPortInput.val();\n                var defaultPort = Craft.Installer.defaultDbPorts[driver];\n\n                this.$dbPortInput.attr('placeholder', defaultPort);\n                if (port == defaultPort) {\n                    this.$dbPortInput.val('');\n                }\n            },\n\n            handleScreenSubmit: function(ev) {\n                ev.preventDefault();\n\n                var inputs = this.getScreenInputNames(this.$currentScreen);\n                if (inputs) {\n                    this.validate(this.$currentScreen.attr('id'), inputs);\n                } else {\n                    this.gotoNextScreen();\n                }\n            },\n\n            getScreenInputNames: function($screen) {\n                var inputsStr = $screen.attr('data-inputs');\n                return inputsStr ? inputsStr.split(',') : null;\n            },\n\n            getInputData: function(what, inputs, includePrefix) {\n                var data = {};\n                for (var i = 0; i < inputs.length; i++) {\n                    var input = inputs[i],\n                        $input = $('#' + what + '-' + input);\n                    data[(includePrefix ? what + '-' : '') + input] = Garnish.getInputPostVal($input);\n                }\n                return data;\n            },\n\n            showInstallScreen: function() {\n                var data = {};\n                var $screen;\n                var inputs;\n                for (var i = 1; i < this.$screens.length - 1; i++) {\n                    $screen = this.$screens.eq(i);\n                    inputs = this.getScreenInputNames($screen);\n                    $.extend(data, this.getInputData($screen.attr('id'), inputs, true));\n                }\n\n                Craft.postActionRequest('install/install', data, $.proxy(this, 'allDone'), {\n                    complete: $.noop\n                });\n            },\n\n            allDone: function(response, textStatus) {\n                $('#spinner').remove();\n                var $h1 = this.$currentScreen.find('h1:first');\n\n                if (textStatus === 'success' && response.success) {\n                    $h1.text(Craft.t('app', 'Craft is installed! ðŸŽ‰'));\n\n\n                    setTimeout(function() {\n                        window.location.href = Craft.getUrl('dashboard');\n                    }, 1000);\n                }\n                else {\n                    $h1.text('Install failed ðŸ˜ž');\n                    $('<p/>', {text: 'Please check your logs for more info.'})\n                        .insertAfter($h1);\n                }\n            },\n\n            gotoNextScreen: function() {\n                this.gotoScreen(this.currentScreen + 1);\n            },\n\n            gotoScreen: function(i) {\n                // Show the dots (unless it's the license screen)\n                if (i === 1) {\n                    if (this.$dots) {\n                        this.$dots.hide();\n                    }\n                } else {\n                    if (!this.$dots) {\n                        this.$dots = $();\n                        for (var j = 0; j < this.$screens.length; j++) {\n                            this.$dots = this.$dots.add($('<div/>').appendTo($('#dots')));\n                        }\n                    } else {\n                        this.$dots.show();\n                    }\n                }\n\n                // Hide the current screen\n                if (this.$currentScreen) {\n                    this.$currentScreen.addClass('hidden');\n                    if (this.$currentDot) {\n                        this.$currentDot.removeClass('sel');\n                    }\n                }\n\n                // Slide in the new screen\n                this.currentScreen = i;\n                this.$currentScreen = this.$screens.eq(i - 1)\n                    .removeClass('hidden');\n                if (this.$dots) {\n                    this.$currentDot = this.$dots.eq(i - 1)\n                        .addClass('sel');\n                }\n\n                // Is this the install screen?\n                if (i === this.$screens.length) {\n                    this.showInstallScreen();\n                } else if (i !== 1) {\n                    // Give focus to the first input\n                    this.$currentScreen.find('input[type=text]:first').trigger('focus');\n                }\n            },\n\n            validate: function(what, inputs) {\n                // Prevent double-clicks\n                if (this.loading) {\n                    return;\n                }\n\n                this.loading = true;\n\n                // Clear any previous error lists\n                this.$currentScreen.find('.input').removeClass('errors');\n                this.$currentScreen.find('ul.errors').remove();\n\n                var $submitBtn = this.$currentScreen.find('.btn.submit');\n                $submitBtn.addClass('sel loading');\n\n                var action = 'install/validate-' + what;\n                var data = this.getInputData(what, inputs, false);\n\n                Craft.postActionRequest(action, data, $.proxy(function(response, textStatus) {\n                    this.loading = false;\n                    $submitBtn.removeClass('sel loading');\n\n                    if (textStatus === 'success') {\n                        if (response.validates) {\n                            this.gotoNextScreen();\n                        }\n                        else {\n                            var $errors = $('<ul/>', {'class': 'errors'})\n                                .insertBefore($('#' + what).find('.buttons'));\n\n                            for (var input in response.errors) {\n                                if (!response.errors.hasOwnProperty(input)) {\n                                    continue;\n                                }\n\n                                for (var i = 0; i < response.errors[input].length; i++) {\n                                    $('<li>' + response.errors[input][i] + '</li>').appendTo($errors);\n                                }\n\n                                var $input = $('#' + what + '-' + input + '-field').children('.input');\n                                $input.addClass('errors');\n                                ($.proxy(function($input) {\n                                    var $elements = $input.find('select,input');\n                                    this.addListener($elements, 'focus,blur,textchange,change', function() {\n                                        $input.removeClass('errors');\n                                        this.removeListener($elements, 'focus,blur,textchange,change');\n                                    });\n                                }, this))($input);\n                            }\n\n                            Garnish.shake(this.$currentScreen);\n                        }\n                    }\n                }, this));\n            }\n        }, {\n            defaultDbPorts: {\n                'mysql': 3306,\n                'pgsql': 5432\n            }\n        });\n\n    Garnish.$win.on('load', function() {\n        Craft.installer = new Craft.Installer();\n    });\n})(jQuery);\n"]}