{"version":3,"sources":["routes/src/routes.js"],"names":["$","Routes","Garnish","Base","extend","tokens","routes","$container","$addRouteBtn","sorter","$routes","length","route","i","Route","this","push","onSortChange","DragSort","axis","Y_AXIS","proxy","addListener","data","children","updateRouteOrder","response","getRoutes","postActionRequest","success","displayNotice","attr","Craft","textStatus","cp","t","displayError","$siteLabel","RouteSettingsModal","$uri","$template","modal","init","container","show","uid","siteUid","updateHtmlFromModal","find","edit","uriHtml","$elem","uriInput","isText","sites","escapeHtml","val","text","name","$templateInput","elements","prop","tokenHtml","html","Modal","$heading","$uriInput","containerHtml","uriElements","$saveBtn","isMultiSite","$deleteBtn","loading","hasOwnProperty","$siteInput","siteInfo","event","appendTo","$bod","setTimeout","$uriVar","addElement","$cancelBtn","hide","MixedInput","dir","DELETE_KEY","uriNodes","node","isTextNode","addTextElement","setVal","nodeValue","addUriVar","templateVal","trigger","base","$uriVars","currentTarget","$uriErrors","elem","clone","routeUid","keyCode","LEFT_KEY","focusPreviousElement","RIGHT_KEY","focusNextElement","startsWith","cpTrigger","preventDefault","addClass","$firstElem","setFocus","removeClass","setCarotPos","saveRoute","$route","remove","addItems","error","ltrim","actionTrigger","ui","createErrorList","setting","addUriError","removeItems","$spinner","routeHtml","$items","errors","uri","addErrorsToList","insertAfter","cancel","deleteRoute","confirm","jQuery"],"mappings":"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","file":"routes.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var Routes = Garnish.Base.extend(\n        {\n            tokens: null,\n            routes: null,\n            $container: null,\n            $addRouteBtn: null,\n            sorter: null,\n\n            init: function() {\n                this.tokens = {};\n                this.routes = [];\n                this.$container = $('#routes');\n\n                var $routes = this.getRoutes();\n\n                for (var i = 0; i < $routes.length; i++) {\n                    var route = new Route($routes[i]);\n                    this.routes.push(route);\n                }\n\n                this.sorter = new Garnish.DragSort($routes, {\n                    axis: Garnish.Y_AXIS,\n                    onSortChange: $.proxy(this, 'updateRouteOrder')\n                });\n\n                this.$addRouteBtn = $('#add-route-btn');\n\n                this.addListener(this.$addRouteBtn, 'click', 'addRoute');\n            },\n\n            getRoutes: function() {\n                return this.$container.children();\n            },\n\n            updateRouteOrder: function() {\n                var $routes = this.getRoutes(),\n                    data = {};\n\n                for (var i = 0; i < $routes.length; i++) {\n                    data['routeUids[' + i + ']'] = $($routes[i]).attr('data-uid');\n                }\n\n                Craft.postActionRequest('routes/update-route-order', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            Craft.cp.displayNotice(Craft.t('app', 'New route order saved.'));\n                        }\n                        else {\n                            Craft.cp.displayError(Craft.t('app', 'Couldn’t save new route order.'));\n                        }\n                    }\n                }, this));\n            },\n\n            addRoute: function() {\n                new RouteSettingsModal();\n            }\n        });\n\n\n    var Route = Garnish.Base.extend(\n        {\n            $container: null,\n            uid: null,\n            siteUid: null,\n            $siteLabel: null,\n            $uri: null,\n            $template: null,\n            modal: null,\n\n            init: function(container) {\n                this.$container = $(container);\n                this.uid = this.$container.data('uid');\n                this.siteUid = this.$container.data('site-uid');\n                this.$siteLabel = this.$container.find('.site:first');\n                this.$uri = this.$container.find('.uri:first');\n                this.$template = this.$container.find('.template:first');\n\n                this.addListener(this.$container, 'click', 'edit');\n            },\n\n            edit: function() {\n                if (!this.modal) {\n                    this.modal = new RouteSettingsModal(this);\n                }\n                else {\n                    this.modal.show();\n                }\n            },\n\n            updateHtmlFromModal: function() {\n                var i;\n\n                if (Craft.isMultiSite) {\n                    if (this.siteUid) {\n                        for (i = 0; i < Craft.sites.length; i++) {\n                            if (Craft.sites[i].uid == this.siteUid) {\n                                this.$siteLabel.text(Craft.sites[i].name);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        this.$siteLabel.text(Craft.t('app', 'Global'));\n                    }\n                }\n\n                var uriHtml = '';\n\n                for (i = 0; i < this.modal.uriInput.elements.length; i++) {\n                    var $elem = this.modal.uriInput.elements[i];\n\n                    if (this.modal.uriInput.isText($elem)) {\n                        uriHtml += Craft.escapeHtml($elem.val());\n                    }\n                    else {\n                        uriHtml += $elem.prop('outerHTML');\n                    }\n                }\n\n                this.$uri.html(uriHtml);\n                this.$template.text(this.modal.$templateInput.val());\n            }\n        });\n\n\n    var RouteSettingsModal = Garnish.Modal.extend(\n        {\n            route: null,\n            $heading: null,\n            $uriInput: null,\n            $uriErrors: null,\n            uriElements: null,\n            $templateInput: null,\n            $saveBtn: null,\n            $cancelBtn: null,\n            $spinner: null,\n            $deleteBtn: null,\n            loading: false,\n\n            init: function(route) {\n                this.route = route;\n\n                var tokenHtml = '<h4>' + Craft.t('app', 'Add a token') + '</h4>';\n\n                for (var name in Craft.routes.tokens) {\n                    if (!Craft.routes.tokens.hasOwnProperty(name)) {\n                        continue;\n                    }\n\n                    var pattern = Craft.routes.tokens[name];\n                    tokenHtml += '<div class=\"token\" data-name=\"' + name + '\" data-value=\"' + pattern + '\"><span>' + name + '</span></div>';\n                }\n\n                var containerHtml =\n                    '<form class=\"modal fitted route-settings\" accept-charset=\"UTF-8\">' +\n                    '<div class=\"header\">' +\n                    '<h1></h1>' +\n                    '</div>' + // .header\n                    '<div class=\"body\">' +\n                    '<div class=\"uri-field field\">' +\n                    '<div class=\"heading\">' +\n                    '<label for=\"uri\">' + Craft.t('app', 'If the URI looks like this') + ':</label>' +\n                    '</div>' +  // .heading\n                    '<div class=\"input\">';\n\n                if (Craft.isMultiSite) {\n                    containerHtml +=\n                        '<div class=\"flex\">' +\n                            '<div class=\"flex-grow\">';\n                }\n\n                containerHtml += '<div id=\"uri\" class=\"text uri ltr\"></div>';\n\n                var i;\n\n                if (Craft.isMultiSite) {\n                    containerHtml +=\n                        '</div>' + // .flex-grow\n                        '<div class=\"select\">' +\n                        '<select class=\"site\">' +\n                        '<option value=\"\">' + Craft.t('app', 'Global') + '</option>';\n\n                    for (i = 0; i < Craft.sites.length; i++) {\n                        var siteInfo = Craft.sites[i];\n                        containerHtml += '<option value=\"' + siteInfo.uid + '\">' + Craft.escapeHtml(siteInfo.name) + '</option>';\n                    }\n\n                    containerHtml +=\n                        '</select>' +\n                        '</div>' + // .select\n                        '</div>'; // .flex\n                }\n\n                containerHtml +=\n                    '</div>' + // .input\n                    '<div class=\"uri-tokens\">' +\n                    tokenHtml +\n                    '</div>' + // .uri-tokens\n                    '</div>' + // .uri-field\n                    '<div class=\"template-field field\">' +\n                    '<div class=\"heading\">' +\n                    '<label for=\"template\">' + Craft.t('app', 'Load this template') + ':</label>' +\n                    '</div>' + // .heading\n                    '<div class=\"input\">' +\n                    '<input id=\"template\" type=\"text\" class=\"text fullwidth template ltr\">' +\n                    '</div>' + // .input\n                    '</div>' + // .template-field\n                    '</div>' + // .body\n                    '<div class=\"footer\">' +\n                    '<div class=\"buttons right last\">' +\n                    '<button type=\"button\" class=\"btn cancel\">' + Craft.t('app', 'Cancel') + '</button>' +\n                    '<button type=\"submit\" class=\"btn submit\">' + Craft.t('app', 'Save') + '</button>' +\n                    '<div class=\"spinner\" style=\"display: none;\"></div>' +\n                    '</div>' +\n                    '<a class=\"delete\">' + Craft.t('app', 'Delete') + '</a>' +\n                    '</div>' +\n                    '</form>';\n\n                var $container = $(containerHtml).appendTo(Garnish.$bod);\n\n                // Find the other elements\n                this.$heading = $container.find('h1:first');\n                this.$siteInput = $container.find('.site:first');\n                this.$uriInput = $container.find('.uri:first');\n                this.$templateInput = $container.find('.template:first');\n                this.$saveBtn = $container.find('.submit:first');\n                this.$cancelBtn = $container.find('.cancel:first');\n                this.$spinner = $container.find('.spinner:first');\n                this.$deleteBtn = $container.find('.delete:first');\n\n                // Hide the Delete button for new routes\n                if (!this.route) {\n                    this.$deleteBtn.hide();\n                }\n\n                // Initialize the uri input\n                this.uriInput = new Garnish.MixedInput(this.$uriInput, {\n                    dir: 'ltr'\n                });\n\n                // Set the heading\n                if (this.route) {\n                    this.$heading.html(Craft.t('app', 'Edit Route'));\n                }\n                else {\n                    this.$heading.html(Craft.t('app', 'Create a new route'));\n                }\n\n                if (this.route) {\n                    // Set the site\n                    this.$siteInput.val(this.route.siteUid);\n\n                    // Set the initial uri value\n                    var uriNodes = this.route.$uri.prop('childNodes');\n\n                    for (i = 0; i < uriNodes.length; i++) {\n                        var node = uriNodes[i];\n\n                        if (Garnish.isTextNode(node)) {\n                            var text = this.uriInput.addTextElement();\n                            text.setVal(node.nodeValue);\n                        }\n                        else {\n                            this.addUriVar(node);\n                        }\n                    }\n\n                    // Set the initial Template value\n                    var templateVal = this.route.$template.text();\n                    this.$templateInput.val(templateVal);\n                }\n\n                this.base($container);\n\n                // We must add vars on mousedown, so that text elements don't have a chance\n                // to lose focus, thus losing the carot position.\n                var $uriVars = this.$container.find('.uri-tokens').children('div');\n\n                this.addListener($uriVars, 'mousedown', function(event) {\n                    this.addUriVar(event.currentTarget);\n                });\n\n                // Save/Cancel/Delete\n                this.addListener(this.$container, 'submit', 'saveRoute');\n                this.addListener(this.$cancelBtn, 'click', 'cancel');\n                this.addListener(this.$deleteBtn, 'click', 'deleteRoute');\n            },\n\n            addUriVar: function(elem) {\n                var $uriVar = $(elem).clone().attr('tabindex', '0');\n                this.uriInput.addElement($uriVar);\n\n                this.addListener($uriVar, 'keydown', function(event) {\n                    switch (event.keyCode) {\n                        case Garnish.LEFT_KEY: {\n                            // Select the previous element\n                            setTimeout($.proxy(function() {\n                                this.uriInput.focusPreviousElement($uriVar);\n                            }, this), 1);\n\n                            break;\n                        }\n                        case Garnish.RIGHT_KEY: {\n                            // Select the next element\n                            setTimeout($.proxy(function() {\n                                this.uriInput.focusNextElement($uriVar);\n                            }, this), 1);\n\n                            break;\n                        }\n                        case Garnish.DELETE_KEY: {\n                            // Delete this element\n                            setTimeout($.proxy(function() {\n                                this.uriInput.removeElement($uriVar);\n                            }, this), 1);\n\n                            event.preventDefault();\n                        }\n                    }\n                });\n            },\n\n            show: function() {\n                if (this.route) {\n                    this.$heading.html(Craft.t('app', 'Edit Route'));\n                    this.$deleteBtn.show();\n                }\n\n                // Focus on the first element\n                setTimeout(function() {\n                    if (this.uriInput.elements.length) {\n                        var $firstElem = this.uriInput.elements[0];\n                        this.uriInput.setFocus($firstElem);\n                        this.uriInput.setCarotPos($firstElem, 0);\n                    } else {\n                        this.$uriInput.trigger('focus');\n                    }\n                }.bind(this), 100);\n\n                this.base();\n            },\n\n            saveRoute: function(event) {\n                event.preventDefault();\n\n                if (this.loading) {\n                    return;\n                }\n\n                this.$container.find('.uri-field .input').removeClass('errors');\n                if (this.$uriErrors) {\n                    this.$uriErrors.remove();\n                    this.$uriErrors = null;\n                }\n\n                var data = {\n                    siteUid: this.$siteInput.val()\n                };\n\n                if (this.route) {\n                    data.routeUid = this.route.uid;\n                }\n\n                var $elem, val;\n\n                for (var i = 0; i < this.uriInput.elements.length; i++) {\n                    $elem = this.uriInput.elements[i];\n\n                    if (this.uriInput.isText($elem)) {\n                        val = $elem.val();\n\n                        if (i === 0) {\n                            // Remove any leading slashes\n                            val = Craft.ltrim(val, '/');\n\n                            // Make sure the first element isn't using the action/CP trigger\n                            if (Craft.startsWith(val, Craft.actionTrigger + '/')) {\n                                this.addUriError(Craft.t('app', 'The URI can’t begin with the {setting} config setting.', {\n                                    setting: 'actionTrigger'\n                                }));\n                                return;\n                            } else if (Craft.cpTrigger && Craft.startsWith(val, Craft.cpTrigger + '/')) {\n                                this.addUriError(Craft.t('app', 'The URI can’t begin with the {setting} config setting.', {\n                                    setting: 'cpTrigger'\n                                }));\n                                return;\n                            }\n                        }\n\n                        data['uriParts[' + i + ']'] = val;\n                    }\n                    else {\n                        data['uriParts[' + i + '][0]'] = $elem.attr('data-name');\n                        data['uriParts[' + i + '][1]'] = $elem.attr('data-value');\n                    }\n                }\n\n                data.template = this.$templateInput.val();\n\n                this.loading = true;\n                this.$saveBtn.addClass('active');\n                this.$spinner.show();\n\n                Craft.postActionRequest('routes/save-route', data, $.proxy(function(response, textStatus) {\n                    this.$saveBtn.removeClass('active');\n                    this.$spinner.hide();\n                    this.loading = false;\n\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            // Is this a new route?\n                            if (!this.route) {\n                                var routeHtml =\n                                    '<div class=\"route\" data-uid=\"' + response.routeUid + '\"' + (response.siteUid ? ' data-site-uid=\"' + response.siteUid + '\"' : '') + '>' +\n                                    '<div class=\"uri-container\">';\n\n                                if (Craft.isMultiSite) {\n                                    routeHtml += '<span class=\"site\"></span>';\n                                }\n\n                                routeHtml +=\n                                    '<span class=\"uri\" dir=\"ltr\"></span>' +\n                                    '</div>' +\n                                    '<div class=\"template\" dir=\"ltr\"></div>' +\n                                    '</div>';\n\n                                var $route = $(routeHtml);\n\n                                $route.appendTo('#routes');\n\n                                this.route = new Route($route);\n                                this.route.modal = this;\n\n                                Craft.routes.sorter.addItems($route);\n\n                                // Was this the first one?\n                                if (Craft.routes.sorter.$items.length === 1) {\n                                    $('#noroutes').addClass('hidden');\n                                }\n                            }\n\n                            this.route.siteUid = response.siteUid;\n                            this.route.updateHtmlFromModal();\n                            this.hide();\n\n                            Craft.cp.displayNotice(Craft.t('app', 'Route saved.'));\n                        } else if (response.errors) {\n                            if (response.errors.uri) {\n                            }\n                        } else {\n                            Craft.cp.displayError(Craft.t('app', 'Couldn’t save route.'));\n                        }\n                    }\n                }, this));\n            },\n\n            addUriError: function(error) {\n                this.$container.find('.uri-field .input').addClass('errors');\n                if (this.$uriErrors) {\n                    Craft.ui.addErrorsToList(this.$uriErrors, [error]);\n                } else {\n                    this.$uriErrors = Craft.ui.createErrorList([error]);\n                    this.$uriErrors.insertAfter(this.$container.find('.uri-field .input'));\n                }\n            },\n\n            cancel: function() {\n                this.hide();\n\n                if (this.route) {\n                    this.route.modal = null;\n                }\n            },\n\n            deleteRoute: function() {\n                if (confirm(Craft.t('app', ('Are you sure you want to delete this route?')))) {\n                    Craft.postActionRequest('routes/delete-route', {routeUid: this.route.uid}, function(response, textStatus) {\n                        if (textStatus === 'success') {\n                            Craft.cp.displayNotice(Craft.t('app', 'Route deleted.'));\n                        }\n                    });\n\n                    Craft.routes.sorter.removeItems(this.route.$container);\n                    this.route.$container.remove();\n                    this.hide();\n\n                    // Was this the last one?\n                    if (Craft.routes.sorter.$items.length === 0) {\n                        $('#noroutes').removeClass('hidden');\n                    }\n                }\n            }\n        });\n\n\n    Craft.routes = new Routes();\n})(jQuery);\n"]}