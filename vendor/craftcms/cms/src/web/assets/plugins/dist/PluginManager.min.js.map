{"version":3,"sources":["plugins/src/PluginManager.js"],"names":["$","Craft","PluginManager","Garnish","Base","extend","init","getPluginLicenseInfo","handle","response","hasOwnProperty","isComposerInstalled","addUninstalledPluginRow","Plugin","this","update","bind","Promise","resolve","reject","sendApiRequest","params","textStatus","postActionRequest","pluginLicenses","license","contentType","catch","info","$table","length","id","replaceWith","class","html","appendTo","children","data","iconUrl","append","name","description","src","text","normalizeUserKey","documentationUrl","href","target","t","size","maxlength","value","licenseKey","readonly","disabled","licensedEdition","data-title","latestVersion","getCsrfInput","method","accept-charset","type","packageName","substr","$keyContainer","replace","updateTimeout","key","data-align","licenseKeyStatus","initUiElements","$row","$oldIcon","$newIcon","remove","toUpperCase","getUrl","manager","$details","hasMultipleEditions","$spinner","$buyBtn","$newEdition","isTrial","find","$keyInput","removeAttr","$oldEdition","addListener","getKey","val","onKeyFocus","showLicenseKey","select","onKeyChange","addClass","userKey","removeClass","setTimeout","proxy","licenseIssues","message","then","i","accountLink","buyUrl","getCpUrl","edition","version","upgradeAvailable","insertBefore","$issues","$form","$p","charAt","substring","$newExpired","add","$oldExpired","expired","renewalUrl","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,cAAAC,QAAAC,KAAAC,OACMH,CAEQI,KAAA,WACGC,KAAAA,uBAEYC,KAAT,SAAAC,GACiBC,IAAAA,IAAAA,KAAeF,EACXC,EAASE,eAAqBH,KAClCI,EAAwBJ,GAAQC,oBAGxC,IAAAI,EAAAC,KAAAd,EAAA,WAAAQ,IAAAO,OAAAN,EAAAD,IAFMM,KAAAF,wBAAAJ,EAAAC,EAAAD,MAR/BQ,KAAAF,QAkBYb,qBAAA,WACc,OAAE,IAAAgB,SAAA,SAAAC,EAAAC,GACGlB,MAAEmB,eAAA,MAAA,eAAA,CADLC,OAAA,CAIGZ,QAAU,aAGTA,MAAAA,SAAUa,GACJrB,MAAKsB,kBAAW,8BAAA,CAC1BC,eAAAf,EAAAgB,QAAAD,gBAAA,KACG,SAAAf,EAAAa,GACG,YAAAA,EACTJ,EAAAT,GAEYU,MAfzB,CADJO,YAAA,YAwBeC,MAADR,OAGJP,wBADiB,SAAAJ,EAAAoB,GAEnB,IAASC,EAAA7B,EAAA,YACH6B,EAAAC,SAHVD,EAAA7B,EAAA,WAAA,CAKA+B,GAAiBC,UACpBC,MAAA,6BAHOC,KAAM,oBAMAlC,EAAA,eAAAgC,YAAAH,IAITM,IAASN,EAAOO,EAAAA,QAAS,CAIQC,KAAA,CAEF7B,OAAAA,KAEmB8B,SAAAA,EAAAA,SAAAA,UAI7BC,OAAoBvC,EAAA,SAEHuC,OAAYC,EAAAA,SAAAA,CAAAA,MAAAA,iBAIhBD,OAAqBE,EAAAA,SAAAA,CAAAA,MAAAA,SAI5BF,OAC0BvC,EAAA,SAAA,CAAA0C,IAAAd,EAAAU,YAERC,OAGevC,EAAA,SAAf,CAAAiC,MAAA,YAMNM,OAAUvC,EAAA,QAAA,CAAA2C,KAAAf,EAAAY,QAESD,OAEDX,EAAAa,YAAAzC,EAAA,OAAA,CAAA2C,KAAAf,EAAAa,cAAAzC,KAIiB4C,OAJjBhB,EAAAiB,iBAMA7C,EAAA,OAAA,CAAAiC,MAAA,UAS3CM,OAAAvC,EAAA,OAAA,CAEO8C,KAAAlB,EAAAiB,iBAGGE,OAAA,SAAUJ,KAAA1C,MAAA+C,EAAA,MAAA,oBAGehD,KAK7BuC,OAEKvC,EAAA,SAAA,CAAAiC,MAAA,qBAGDM,OAAAvC,EAAA,UAAA,CAAAiC,MAAA,SAESM,OAGAvC,EAAA,WAAA,CAAAiC,MAAA,YAAAgB,KAAA,GAGHC,UAAA,GAIGC,MAAAlD,MAAAC,cAAA0C,iBAAAhB,EAAAwB,YAAAC,UAAA,EAAAC,UAAA,UAgBJf,OACMgB,EAAAA,QAAAA,CAIdtB,MAAY,SAAAuB,aAAAvD,MAAA+C,EAAA,MAAA,YAGES,OAIFzD,EAAA,UAAA,CAAAiC,MAAA,YAAAM,OAGEa,EAAAA,UAAAA,CAAAA,MAAAA,QAAAA,KAAAA,MAAAA,EAAAA,MAAAA,eAMNb,OACCX,EAAA6B,cAGDC,EAAAA,QACbnB,CACyBN,MAAA,cAECuB,aAAAvD,MAAA+C,EAAA,MAAA,YAEFT,OACIvC,EAAA,UAAA,CAIL2D,OAAA,OAAAC,iBAAA,UAOMrB,OAEgBvC,EAAA,WAAA,CAEA6D,KAAA,SAvJlErB,KAAA,SAmKAW,MAAA,yBAG4BZ,OACMvC,EAAA,WAAS,CACvC6D,KAAA,SACHrB,KAAA,cA9E2BW,MAAOvB,EAAKkC,eAiFvCvB,OA7EuBvC,EAAE,WAAY,CA8EH+D,KAA5B,SACVvB,KAAA,SAlOTW,MAAA3C,KAuOI+B,OAAAvC,EAAA,WAAA,CAAA6D,KAAA,SAAArB,KAAA,UAAAW,MAAAvB,EAAA2B,mBAAAhB,OAWkCvC,EAAA,WAAA,CAC1B6D,KAAA,SACArB,KAAA,UAC+BW,MAA/BvB,EAAA6B,iBAGoBO,OACMhE,EAAV,WAAhB,CACA6D,KAAA,SACiCrB,KAAS,aACTW,MAASvB,EAAAwB,cAIda,OAzBpCjE,EAAA,WAAA,CA4B2B6D,KAAA,SACnBrB,KAAA,SA7BRW,MAAA,sBAkC8Be,OAAlBjE,MAAAyD,gBACHnB,OAnFuBvC,EAAE,SAAU,CAACiC,MAAS,aAoF9CM,OAlFgCvC,EAAE,YAAa,CAmFDmE,KAAIrC,SAC9CG,MAAA,cACkCW,YAAlC,cAGHL,OA1CTvC,EAAA,SAAA,CA6CoCiC,MAAA,OAC5BmC,aAAA,UACqD7B,OAA2BvC,EAAA,SAA+CuC,OAC7FvC,EAAA,SAEhBuC,OACFvC,EAAA,OAAA,CACAiC,MAAA,aAHRU,KAAA1C,MAAA+C,EAAA,MAAA,mBAYCqB,KA7ETpE,MAAMqE,eAAeC,KAgFbC,CADJ5B,iBAEO,SAAAuB,GACHM,MAAuBF,iBAAvBJ,GAAA,KAAiCA,EACpC,GAED,MAASO,EAAT,GAGJP,EA9EOA,EAAIF,QAAQ,QAAS,OAAOF,OAAO,EAAG,IAAIY,iBAkF5B7B,IAAAA,EAAM7C,QAAM2E,KAAOvE,OAAgC,CADlDwE,QAEV,KAAWN,KAAA,KAFnBO,SAAA,KAvERd,cAAe,KA0EHpC,UAAKmD,KACHC,SAAU,KAACC,QAAS,KAAgBtC,OAAMf,KAA5CsC,cAAoEgB,KApEhF5E,KAAM,SAASuE,EAASN,GAsERzD,KAACqE,QAASN,EACZ/D,KAADyD,KAAWA,EAACzD,KAASgE,SAAAhE,KAAVyD,KAAAa,KAAA,YAA+BtE,KAAEb,cAAesE,EAAfa,KAAA,gBAA0BjD,KAAvEkD,UAAAvE,KAAAkD,cAAAoB,KAAA,cAAAE,WAAA,YACHxE,KAAAmE,QAAAnE,KAAAkD,cAAAoB,KAAA,QAjELtE,KAAKkE,SAAWT,EAAKa,KAAK,YAkElBG,KAAAA,OAAJzE,KAAwByD,KAAAlC,KAAA,UACpBkD,KAAWC,YAAX1E,KAAwBoE,UAAxB,QAAA,cACGpE,KAAA0E,YAAA1E,KAAAuE,UAAA,QAAA,gBAZXI,OAeWF,WACPA,OAAYb,KAAZW,UAAAK,MAAAzB,QAAA,MAAA,IAAAU,eA9DRgB,WAAY,WAkEJC,KAAAA,UAAqBC,UAErBC,YAAK9B,WACFlD,KAAAoD,eACEF,aAAc+B,KAAS7B,eA9DhC,IAAIC,EAAMrD,KAAK2E,SACf,GAAmB,IAAftB,EAAIrC,QAA+B,KAAfqC,EAAIrC,QAAkBqC,EAAIrC,OAAS,GAAgB,MAAXqC,EAAI,GAAa,CAkExEkB,IAAUU,EAAS9F,MAAxBC,cAAA0C,iBAAAuB,GACGrD,KAAAuE,UAAAK,IAAAM,GACEX,KAAUY,cAAYC,WAA3BlG,EAAAmG,MAAArF,KAAA,uBAAA,OAICyD,oBAAqBG,WA/D1B5D,KAAKkE,SAASiB,YAAY,UAgEjBG,MAAAA,kBAAsB,4BAAA,CAAA5F,OAAAM,KAAAN,OAAA2D,IAAArD,KAAA2E,UAAA,SAAAhF,EAAAa,GAC3B,YAAeA,GACA+E,KAAAA,QAAf9F,uBA9DS+F,KAAK,SAAS7F,GA+DCK,KAACsF,SAALL,SAA2BQ,UAC9BH,KAAcG,OAA3B9F,EAAAK,KAAAN,UACSQ,KAALF,QAEQ0B,KAAMZ,QA3D9Bb,OAAQ,SAASa,GA+DGyE,IAAAA,EAAUvF,KAAQyD,KAAOa,KAAA,uBACrBoB,GAAa,SAAbA,EAAAA,kBAAa5E,EAAAwE,cAAAtE,OAAA,CACb2E,IAAQxG,EAAMyG,EAAAA,UAAU,CAAAzE,MAAA,uBAAhB,IAAuD0E,EAAvDP,cAAAtE,OAAA,QAAA,MAFZ0C,EAAA1C,OAIA0C,EAAAxC,YAAAyC,GACCA,EAALtC,SAAArB,KAAAyD,KAAAa,KAAA,eAEiBxD,EAAKgF,QADlBpC,EAAAE,SAKA2B,IAAAA,EAAkBvF,KAAOyD,KAAAa,KAAA,YACzB,GAAAxD,EAAAmD,qBAAAnD,EAAAuD,QAAA,CA1DZ,IAAID,EAActD,EAAKiF,iBA2Df7G,EAAA,OAAA,CAAA8C,KAAA7C,MAAA2E,OAAA,gBAAA9D,KAAAN,QAAAyB,MAAA,YACchC,EAAAA,SAAA,CAAegC,MAAA,YArBjCL,EAAAmD,qBAnCA/E,EAAE,SAAU,CAACiC,MAAS,eAAgBU,KAAMf,EAAK+E,UAAUxE,SAAS+C,GA2D3CtD,EAAVuD,SAAyBkB,EAAAA,SAAAA,CAAAA,MAAAA,gBAAAA,KAAAA,MAAAA,EAAAA,MAAAA,WAAAA,SAAAA,GAtDxCd,EAAYzD,OAuDHsE,EAALpE,YAA0BkD,GAEVA,EADK4B,aAAAhG,KAAAyD,KAAAa,KAAA,kBAIJG,EAAC7B,QAGA6B,EADIb,SAQVb,IAAM+B,EADIhE,EAAAwB,YAAA,YAAAxB,EAAAyC,iBAsBxBC,GApBoBsB,EACD9E,KAAEkD,cAAKxD,YAAAA,UAKNM,KAAAkD,cADI+B,SAAA,UAQhBzB,GAAN1C,EAAAwE,cAAAtE,OACOhB,KAAGiG,UAAYC,SAAtB,SAEOlG,KAAGiG,UAAYE,YAAtB,SAGA9E,KAAAA,KAASiD,KAAKN,WAAtBJ,SACMJ,EAAAA,cAANxC,OAAA,CA9DA,IAiEJ,IAlEQmF,EAAID,EAAOX,EAkEnBU,EAAA/G,IAjEauG,EAAI,EAAGA,EAAI3E,EAAKwE,cAActE,OAAQyE,IAAK,CAkEtC,OAAKhC,EAAKa,cAA5BmB,IAhEY,IAAK,gBAiECF,EAAApG,MAAA+C,EAAA,MAAA,0CAAA,CACcR,KAAAZ,EAAA2B,gBAAA2D,OAAA,GAAAvC,cAAA/C,EAAA2B,gBAAA4D,UAAA,KACf,8DADelH,MAAA+C,EAAA,MAAA,UAAA,YAEH,MAFzB,IAAA,aA5DYqD,EAAUpG,MAAM+C,EAAE,MAAO,+HAAgI,CAkE7IwD,YAAA,uFACIY,OAAAA,MAAxBV,SAAA,oBAAA5F,KAAAN,UAAAoB,EAAA+E,aAEqB,MACxB,IAAA,SAGLN,EAAApG,MAAA+C,EAAA,MAAA,uDAAA,CAlEoB4D,QAAShF,EAAKgF,UAmEXhF,MACNqE,IAAY,WAhEbI,EAAUpG,MAAM+C,EAAE,MAAO,8BAiEdlB,MACNiE,QACVM,EAAApG,MAAA+C,EAAA,MAAA,gCAGJiE,EAAAjH,EAAA,OAAA,CAAAiC,MAAA,QAAAC,KAAAmE,IACH,kBAAaN,EAASK,cAAtBG,IACHS,EAAAhH,EAAA,UAAA,CACJ2D,OAAA,OA9MTC,iBAAA,UAiJ6BrB,OAAOtC,MAAMyD,gBACbnB,OACGvC,EAAE,WAAY,CACV6D,KAAM,SACNrB,KAAM,SACNW,MAAO,4BAGdZ,OACGvC,EAAE,WAAY,CACV6D,KAAM,SACNrB,KAAM,eACNW,MAAOrC,KAAKN,UAGnB+B,OACGvC,EAAE,WAAY,CACV6D,KAAM,SACNrB,KAAM,UACNW,MAAOvB,EAAK2B,mBAGnBhB,OAAO0E,GAEZhH,MAAMqE,eAAe0C,GACrBD,EAAUA,EAAQM,IAAIL,IAEtBD,EAAUA,EAAQM,IAAIJ,GAG9BF,EAAQ5E,SAASrB,KAAKgE,UACtB7E,MAAMqE,iBAIV,IAAIgD,EAAcxG,KAAKyD,KAAKa,KAAK,YACjC,GAAIxD,EAAK2F,QAAS,CACd,IAAIH,EAAcpH,EAAE,OAAQ,CACxBiC,MAAS,4BACTC,KAAMjC,MAAM+C,EAAE,MAAO,6BACjB,IACA/C,MAAM+C,EAAE,MAAO,iDAAiDiB,QAAQ,MAAO,YAAcrC,EAAK4F,WAAa,wBAEnHF,EAAYxF,OACZwF,EAAYtF,YAAYoF,GAExBA,EAAYjF,SAASrB,KAAKgE,UAK9Bc,IAAmBhE,EAAKwB,YACxBtC,KAAKmE,QAAQgB,YAAY,UACrBrE,EAAKwE,cAActE,OACnBhB,KAAKmE,QAAQc,SAAS,UAEtBjF,KAAKmE,QAAQgB,YAAY,WAG7BnF,KAAKmE,QAAQc,SAAS,aArb1C,CA0bG0B","file":"PluginManager.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.PluginManager = Garnish.Base.extend(\n        {\n            init: function() {\n                this.getPluginLicenseInfo()\n                    .then(function(response) {\n                        for (var handle in response) {\n                            if (response.hasOwnProperty(handle)) {\n                                if (!response[handle].isComposerInstalled) {\n                                    this.addUninstalledPluginRow(handle, response[handle]);\n                                } else {\n                                    (new Plugin(this, $('#plugin-' + handle))).update(response[handle]);\n                                }\n                            }\n                        }\n                    }.bind(this));\n            },\n\n            getPluginLicenseInfo: function() {\n                return new Promise(function(resolve, reject) {\n                    Craft.sendApiRequest('GET', 'cms-licenses', {\n                            params: {\n                                include: 'plugins',\n                            },\n                        })\n                        .then(function(response) {\n                            Craft.postActionRequest('app/get-plugin-license-info', {\n                                pluginLicenses: response.license.pluginLicenses || [],\n                            }, function(response, textStatus) {\n                                if (textStatus === 'success') {\n                                    resolve(response);\n                                } else {\n                                    reject();\n                                }\n                            }, {\n                                contentType: 'json'\n                            });\n                        })\n                        .catch(reject);\n                });\n            },\n\n            addUninstalledPluginRow: function(handle, info) {\n                var $table = $('#plugins');\n                if (!$table.length) {\n                    $table = $('<table/>', {\n                        id: 'plugins',\n                        'class': 'data fullwidth collapsible',\n                        html: '<tbody></tbody>'\n                    });\n                    $('#no-plugins').replaceWith($table);\n                }\n\n                var $row = $('<tr/>', {\n                        data: {\n                            handle: handle,\n                        }\n                    })\n                    .appendTo($table.children('tbody'))\n                    .append(\n                        $('<th/>')\n                            .append(\n                                $('<div/>', {'class': 'plugin-infos'})\n                                    .append(\n                                        $('<div/>', {'class': 'icon'})\n                                            .append(\n                                                $('<img/>', {src: info.iconUrl})\n                                            )\n                                    )\n                                    .append(\n                                        $('<div/>', {'class': 'details'})\n                                            .append(\n                                                $('<h2/>', {text: info.name})\n                                            )\n                                            .append(\n                                                info.description\n                                                    ? $('<p/>', {text: info.description})\n                                                    : $()\n                                            )\n                                            .append(\n                                                info.documentationUrl\n                                                    ? $('<p/>', {'class': 'links'})\n                                                    .append(\n                                                        $('<a/>', {\n                                                            href: info.documentationUrl,\n                                                            target: '_blank',\n                                                            text: Craft.t('app', 'Documentation')\n                                                        })\n                                                    )\n                                                    : $()\n                                            )\n                                            .append(\n                                                $('<div/>', {'class': 'flex license-key'})\n                                                    .append(\n                                                        $('<div />', {'class': 'pane'})\n                                                            .append(\n                                                                $('<input/>', {\n                                                                    'class': 'text code',\n                                                                    size: 29,\n                                                                    maxlength: 29,\n                                                                    value: Craft.PluginManager.normalizeUserKey(info.licenseKey),\n                                                                    readonly: true,\n                                                                    disabled: true\n                                                                })\n                                                            )\n                                                    )\n                                            )\n                                    )\n                            )\n                    )\n                    .append(\n                        $('<td/>', {\n                            'class': 'nowrap',\n                            'data-title': Craft.t('app', 'Status')\n                        })\n                            .append(\n                                $('<span/>', {'class': 'status'})\n                            )\n                            .append(\n                                $('<span/>', {'class': 'light', text: Craft.t('app', 'Missing')})\n                            )\n                    )\n                    .append(\n                        info.latestVersion\n                            ? $('<td/>', {\n                                'class': 'nowrap thin',\n                                'data-title': Craft.t('app', 'Action')\n                            })\n                            .append(\n                                $('<form/>', {\n                                    method: 'post',\n                                    'accept-charset': 'UTF-8',\n                                })\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'action',\n                                            value: 'pluginstore/install'\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'packageName',\n                                            value: info.packageName\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'handle',\n                                            value: handle\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'edition',\n                                            value: info.licensedEdition\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'version',\n                                            value: info.latestVersion\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'licenseKey',\n                                            value: info.licenseKey\n                                        })\n                                    )\n                                    .append(\n                                        $('<input/>', {\n                                            type: 'hidden',\n                                            name: 'return',\n                                            value: 'settings/plugins'\n                                        })\n                                    )\n                                    .append(Craft.getCsrfInput())\n                                    .append(\n                                        $('<div/>', {'class': 'btngroup'})\n                                            .append(\n                                                $('<button/>', {\n                                                    type: 'button',\n                                                    'class': 'btn menubtn',\n                                                    'data-icon': 'settings'\n                                                })\n                                            )\n                                            .append(\n                                                $('<div/>', {\n                                                    'class': 'menu',\n                                                    'data-align': 'right',\n                                                })\n                                                    .append(\n                                                        $('<ul/>')\n                                                            .append(\n                                                                $('<li/>')\n                                                                    .append(\n                                                                        $('<a/>', {\n                                                                            'class': 'formsubmit',\n                                                                            text: Craft.t('app', 'Install')\n                                                                        })\n                                                                    )\n                                                            )\n                                                    )\n                                            )\n                                    )\n                            )\n                            : $()\n                    )\n                ;\n\n                Craft.initUiElements($row);\n            }\n        }, {\n            normalizeUserKey: function(key) {\n                if (typeof key !== 'string' || key === '') {\n                    return '';\n                }\n                if (key[0] === '$') {\n                    return key;\n                }\n                return key.replace(/.{4}/g, '$&-').substr(0, 29).toUpperCase();\n            }\n        }\n    );\n\n    var Plugin = Garnish.Base.extend(\n        {\n            manager: null,\n            $row: null,\n            $details: null,\n            $keyContainer: null,\n            $keyInput: null,\n            $spinner: null,\n            $buyBtn: null,\n            handle: null,\n            updateTimeout: null,\n\n            init: function(manager, $row) {\n                this.manager = manager;\n                this.$row = $row;\n                this.$details = this.$row.find('.details');\n                this.$keyContainer = $row.find('.license-key')\n                this.$keyInput = this.$keyContainer.find('input.text').removeAttr('readonly');\n                this.$buyBtn = this.$keyContainer.find('.btn');\n                this.$spinner = $row.find('.spinner');\n                this.handle = this.$row.data('handle');\n                this.addListener(this.$keyInput, 'focus', 'onKeyFocus')\n                this.addListener(this.$keyInput, 'input', 'onKeyChange');\n            },\n\n            getKey: function() {\n                return this.$keyInput.val().replace(/\\-/g, '').toUpperCase();\n            },\n\n            onKeyFocus: function() {\n                this.$keyInput.select();\n            },\n\n            onKeyChange: function() {\n                if (this.updateTimeout) {\n                    clearTimeout(this.updateTimeout);\n                }\n                var key = this.getKey();\n                if (key.length === 0 || key.length === 24 || (key.length > 1 && key[0] === '$')) {\n                    // normalize\n                    var userKey = Craft.PluginManager.normalizeUserKey(key);\n                    this.$keyInput.val(userKey);\n                    this.updateTimeout = setTimeout($.proxy(this, 'updateLicenseStatus'), 100);\n                }\n            },\n\n            updateLicenseStatus: function() {\n                this.$spinner.removeClass('hidden');\n                Craft.postActionRequest('app/update-plugin-license', {handle: this.handle, key: this.getKey()}, function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        this.manager.getPluginLicenseInfo()\n                            .then(function(response) {\n                                this.$spinner.addClass('hidden');\n                                this.update(response[this.handle]);\n                            }.bind(this));\n                    }\n                }.bind(this))\n            },\n\n            update: function(info) {\n                // update the status icon\n                var $oldIcon = this.$row.find('.license-key-status');\n                if (info.licenseKeyStatus == 'valid' || info.licenseIssues.length) {\n                    var $newIcon = $('<span/>', {'class': 'license-key-status ' + (info.licenseIssues.length === 0 ? 'valid' : '')});\n                    if ($oldIcon.length) {\n                        $oldIcon.replaceWith($newIcon);\n                    } else {\n                        $newIcon.appendTo(this.$row.find('.icon'));\n                    }\n                } else if ($oldIcon.length) {\n                    $oldIcon.remove();\n                }\n\n                // add the edition/trial badge\n                var $oldEdition = this.$row.find('.edition');\n                if (info.hasMultipleEditions || info.isTrial) {\n                    var $newEdition = info.upgradeAvailable\n                        ? $('<a/>', {href: Craft.getUrl('plugin-store/' + this.handle), 'class': 'edition'})\n                        : $('<div/>', {'class': 'edition'});\n                    if (info.hasMultipleEditions) {\n                        $('<div/>', {'class': 'edition-name', text: info.edition}).appendTo($newEdition);\n                    }\n                    if (info.isTrial) {\n                        $('<div/>', {'class': 'edition-trial', text: Craft.t('app', 'Trial')}).appendTo($newEdition);\n                    }\n                    if ($oldEdition.length) {\n                        $oldEdition.replaceWith($newEdition);\n                    } else {\n                        $newEdition.insertBefore(this.$row.find('.version'));\n                    }\n                } else if ($oldEdition.length) {\n                    $oldEdition.remove();\n                }\n\n                // show the license key?\n                var showLicenseKey = info.licenseKey || info.licenseKeyStatus !== 'unknown';\n                if (showLicenseKey) {\n                    this.$keyContainer.removeClass('hidden');\n                } else {\n                    this.$keyContainer.addClass('hidden');\n                }\n\n                // update the license key input class\n                if (showLicenseKey && info.licenseIssues.length) {\n                    this.$keyInput.addClass('error');\n                } else {\n                    this.$keyInput.removeClass('error');\n                }\n\n                // add the error message\n                this.$row.find('p.error').remove();\n                if (info.licenseIssues.length) {\n                    var $issues = $();\n                    var $p, $form, message;\n                    for (var i = 0; i < info.licenseIssues.length; i++) {\n                        switch (info.licenseIssues[i]) {\n                            case 'wrong_edition':\n                                message = Craft.t('app', 'This license is for the {name} edition.', {\n                                    name: info.licensedEdition.charAt(0).toUpperCase() + info.licensedEdition.substring(1)\n                                }) + ' <button type=\"button\" class=\"btn submit small formsubmit\">' + Craft.t('app', 'Switch') + '</button>';\n                                break;\n                            case 'mismatched':\n                                message = Craft.t('app', 'This license is tied to another Craft install. Visit {accountLink} to detach it, or <a href=\"{buyUrl}\">buy a new license</a>', {\n                                    accountLink: '<a href=\"https://id.craftcms.com\" rel=\"noopener\" target=\"_blank\">id.craftcms.com</a>',\n                                    buyUrl: Craft.getCpUrl(`plugin-store/buy/${this.handle}/${info.edition}`),\n                                });\n                                break;\n                            case 'astray':\n                                message = Craft.t('app', 'This license isn’t allowed to run version {version}.', {\n                                    version: info.version\n                                });\n                                break;\n                            case 'required':\n                                message = Craft.t('app', 'A license key is required.');\n                                break;\n                            default:\n                                message = Craft.t('app', 'Your license key is invalid.');\n                        }\n\n                        $p = $('<p/>', {'class': 'error', html: message});\n                        if (info.licenseIssues[i] === 'wrong_edition') {\n                            $form = $('<form/>', {\n                                    method: 'post',\n                                    'accept-charset': 'UTF-8',\n                                })\n                                .append(Craft.getCsrfInput())\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'action',\n                                        value: 'plugins/switch-edition'\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'pluginHandle',\n                                        value: this.handle\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'edition',\n                                        value: info.licensedEdition\n                                    })\n                                )\n                                .append($p);\n\n                            Craft.initUiElements($form);\n                            $issues = $issues.add($form);\n                        } else {\n                            $issues = $issues.add($p);\n                        }\n                    }\n                    $issues.appendTo(this.$details);\n                    Craft.initUiElements()\n                }\n\n                // add the expired badge\n                var $oldExpired = this.$row.find('.expired');\n                if (info.expired) {\n                    var $newExpired = $('<p/>', {\n                        'class': 'warning with-icon expired',\n                        html: Craft.t('app', 'This license has expired.') +\n                            ' ' +\n                            Craft.t('app', '<a>Renew now</a> for another year of updates.').replace('<a>', '<a href=\"' + info.renewalUrl + '\" target=\"_blank\">')\n                    });\n                    if ($oldExpired.length) {\n                        $oldExpired.replaceWith($newExpired);\n                    } else {\n                        $newExpired.appendTo(this.$details);\n                    }\n                }\n\n                // show/hide the Buy button\n                if (showLicenseKey && !info.licenseKey) {\n                    this.$buyBtn.removeClass('hidden');\n                    if (info.licenseIssues.length) {\n                        this.$buyBtn.addClass('submit');\n                    } else {\n                        this.$buyBtn.removeClass('submit');\n                    }\n                } else {\n                    this.$buyBtn.addClass('hidden');\n                }\n            }\n        }\n    )\n})(jQuery);\n"]}