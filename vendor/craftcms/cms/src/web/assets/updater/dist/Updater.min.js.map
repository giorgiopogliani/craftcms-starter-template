{"version":3,"sources":["updater/src/Updater.js"],"names":["$","Craft","Updater","Garnish","Base","extend","$graphic","$status","error","data","actionPrefix","this","parseStatus","status","html","escapeHtml","replace","addClass","showStatus","showError","details","appendTo","showErrorDetails","postActionRequest","textStatus","setState","response","handleFatalError","jqXHR","complete","noop","action","proxy","state","removeClass","nextAction","finished","onFinish","returnUrl","$buttonContainer","errorDetails","length","options","showOptions","option","label","$button","id","class","i","attr","getEmailLink","text","addListener","email","encodeURIComponent","url","link","subject","body","ev","setTimeout","window","location","getUrl","t","statusText","responseText","jQuery"],"mappings":"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","file":"Updater.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.Updater = Garnish.Base.extend(\n        {\n            $graphic: null,\n            $status: null,\n            error: null,\n            data: null,\n            actionPrefix: null,\n\n            init: function(actionPrefix) {\n                this.actionPrefix = actionPrefix;\n                this.$graphic = $('#graphic');\n                this.$status = $('#status');\n            },\n\n            parseStatus: function(status) {\n                return '<p>' +\n                    Craft.escapeHtml(status)\n                        .replace(/\\n{2,}/g, '</p><p>')\n                        .replace(/\\n/g, '<br>')\n                        .replace(/`(.*?)`/g, '<code>$1</code>') +\n                    '</p>';\n            },\n\n            showStatus: function(status) {\n                this.$status.html(this.parseStatus(status));\n            },\n\n            showError: function(error) {\n                this.$graphic.addClass('error');\n                this.showStatus(error);\n            },\n\n            showErrorDetails: function(details) {\n                $('<div/>', {\n                    id: 'error',\n                    class: 'code',\n                    tabindex: 0,\n                    html: this.parseStatus(details),\n                }).appendTo(this.$status);\n            },\n\n            postActionRequest: function(action) {\n                var data = {\n                    data: this.data\n                };\n\n                Craft.postActionRequest(this.actionPrefix + '/' + action, data, $.proxy(function(response, textStatus, jqXHR) {\n                    if (textStatus === 'success') {\n                        this.setState(response);\n                    } else {\n                        this.handleFatalError(jqXHR);\n                    }\n                }, this), {\n                    complete: $.noop\n                });\n            },\n\n            setState: function(state) {\n                this.$graphic.removeClass('error');\n\n                // Data probably won't be set if this is coming from an option\n                if (state.data) {\n                    this.data = state.data;\n                }\n\n                if (state.status) {\n                    this.showStatus(state.status);\n                } else if (state.error) {\n                    this.showError(state.error);\n                    if (state.errorDetails) {\n                        this.showErrorDetails(state.errorDetails);\n                    }\n                }\n\n                if (state.nextAction) {\n                    this.postActionRequest(state.nextAction);\n                } else if (state.options) {\n                    this.showOptions(state);\n                } else if (state.finished) {\n                    this.onFinish(state.returnUrl);\n                }\n            },\n\n            showOptions: function(state) {\n                var $buttonContainer = $('<div/>', {id: 'options', 'class': 'buttons'}).appendTo(this.$status);\n\n                for (var i = 0; i < state.options.length; i++) {\n                    var option = state.options[i],\n                        $button = $('<a/>', {\n                            'class': 'btn big',\n                            text: option.label\n                        }).appendTo($buttonContainer);\n\n                    if (option.submit) {\n                        $button.addClass('submit');\n                    }\n\n                    if (option.email) {\n                        $button.attr('href', this.getEmailLink(state, option));\n                    } else if (option.url) {\n                        $button.attr('href', option.url);\n                        $button.attr('target', '_blank');\n                    } else {\n                        $button.attr('role', 'button');\n                        this.addListener($button, 'click', option, 'onOptionSelect');\n                    }\n                }\n            },\n\n            getEmailLink: function(state, option) {\n                var link = 'mailto:' + option.email +\n                    '?subject=' + encodeURIComponent(option.subject || 'Craft update failure');\n\n                var body = 'Describe what happened here.';\n                if (state.errorDetails) {\n                    body += '\\n\\n-----------------------------------------------------------\\n\\n' + state.errorDetails;\n                }\n                link += '&body=' + encodeURIComponent(body);\n\n                return link;\n            },\n\n            onOptionSelect: function(ev) {\n                this.setState(ev.data);\n            },\n\n            onFinish: function(returnUrl) {\n                this.$graphic.addClass('success');\n\n                // Redirect in a moment\n                setTimeout(function() {\n                    if (returnUrl) {\n                        window.location = Craft.getUrl(returnUrl);\n                    }\n                    else {\n                        window.location = Craft.getUrl('dashboard');\n                    }\n                }, 750);\n            },\n\n            handleFatalError: function(jqXHR) {\n                var details = Craft.t('app', 'Status:') + ' ' + jqXHR.statusText + '\\n\\n' +\n                    Craft.t('app', 'Response:') + ' ' + jqXHR.responseText + '\\n\\n';\n\n                this.setState({\n                    error: Craft.t('app', 'A fatal error has occurred:'),\n                    errorDetails: details,\n                    options: [\n                        {\n                            label: Craft.t('app', 'Troubleshoot'),\n                            url: 'https://craftcms.com/guides/failed-updates'\n                        },\n                        {\n                            label: Craft.t('app', 'Send for help'),\n                            email: 'support@craftcms.com'\n                        }\n                    ]\n                });\n\n                // Tell Craft to disable maintenance mode\n                Craft.postActionRequest(this.actionPrefix + '/finish', {data: this.data});\n            }\n        });\n})(jQuery);\n"]}