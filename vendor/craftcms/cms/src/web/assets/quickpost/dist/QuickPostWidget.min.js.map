{"version":3,"sources":["quickpost/src/QuickPostWidget.js"],"names":["$","Craft","QuickPostWidget","Garnish","Base","extend","params","initFields","$widget","$form","$formClone","$spinner","$errorList","loading","widgetId","this","find","initForm","clone","$menuBtn","$saveAndContinueEditingBtn","data","addListener","menu","$container","menubtn","saveAndContinueEditing","proxy","handleFormSubmit","event","preventDefault","save","formData","getPostData","postActionRequest","children","removeClass","textStatus","response","success","enabled","callback","displayError","errors","remove","attribute","hasOwnProperty","cp","length","error","insertAfter","i","appendTo","widget","title","username","authorUsername","replaceWith","$newForm","RecentEntriesWidget","instances","cpEditUrl","sectionId","addEntry","url","dateCreated","gotoEntry","redirectTo","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,gBAAAC,QAAAC,KAAAC,OACMH,CAEUI,OADZ,KAEIC,WAFJ,KAGWC,QAHX,KAIWC,MAJX,KAKIC,WALJ,KAMYC,SANZ,KAOIC,WAPJ,KAQWC,SARX,EAWaP,KAAL,SAAAQ,EAAAR,EAAAC,GACKA,KAALD,OAAkBC,EACbC,KAAUR,WAAEO,EAERQ,KAAGP,QAAaQ,EAAAA,UAAKF,GAEzBG,IAASR,EAAdM,KAAAP,QAAAQ,KAAA,cAjBRD,KAAAL,WAAAD,EAAAS,QAoBcH,KAAAE,SAAAR,IAIDF,SAAL,SAAAE,GAEIU,KAAWV,MAAKA,EAChBW,KAAAA,SAAAA,KAA0BX,MAAGU,KAASE,YAIrCC,KAAAA,aA/Bb,IAAAH,EAAAJ,KAAAN,MAAAO,KAAA,qCAmCoBI,EAAkBD,EAAAE,KAAA,WAAAE,KAAAC,WAAAR,KAAA,iBAGpBhB,EAAQyB,UAGtBC,KAAAA,YAAwBX,KAAAN,MAAW,SAAA,oBACrBT,KAAE2B,YAAYP,EAAxB,QAAA,2BAIIQ,iBAAc,SAAAC,GACdA,EAAAC,iBATJf,KAAKgB,KAAK/B,EAAE2B,MAAMZ,KAAM,YAepBiB,uBAAmBC,WACflB,KAAKV,KAAOL,EAAA2B,MAAAZ,KAAA,eAEdmB,KAAAA,SAAAA,GACGrB,IAALE,KAAeF,QAAVA,CAIID,KAAAA,SAAWuB,EACnBpB,KAAAJ,SAAAyB,YAAA,UAEGC,IAAAA,EAAelC,QAAW8B,YAAAlB,KAAAN,OACtB6B,EAASC,EAAAA,OAAS,CAAAC,QAAA,GAAAR,EAAAjB,KAAAT,QAElBmC,MAASH,kBAAT,qBAAAjB,EAAArB,EAAA2B,OAAA,SAAAW,EAAAD,GAHR,GAKStB,KAAAF,SAAA,EACDE,KAAS2B,SAAazC,SAAQ,UAElBc,KAAC4B,YACC/B,KAAAA,WAAYuB,WAAAS,SATf,YAAfP,EAaiBQ,GAAAA,EAAaP,QACbA,MAASK,GAAOG,cAAhB7C,MAA+B4C,EAAAA,MAAY,iBAC5CJ,EAAAH,QAKE,GAFIrC,MAAO8C,GAAGT,aAASK,MAAOE,EAAAA,MAAWG,yBAEhCC,EAAQN,OAKtC,IAAA,IAAAE,KAJgB9B,KAAAH,aACJG,KAAAH,WAAAZ,EAAA,wBAAAkD,YAAAnC,KAAAN,QAGZ6B,EAAAK,OAjCL,GAAAL,EAAAK,OAAAG,eAAAD,GAuCe,IAAgB3B,IAA/BiC,EAAA,EAAAA,EAAAb,EAAAK,OAAAE,GAAAG,OAAAG,IAAA,CACA,IAAAF,EAAAX,EAAAK,OAAAE,GAAAM,GAGAnD,EAAA,OAAAiD,EAAA,SAAAG,SAAArC,KAAAH,eAIayC,SAGGC,OAAK,SAAUhB,GAEfiB,IAAAA,EAAUjB,KAASkB,WAAAA,QA5G3C,GAwGoBzC,KAAAN,MAAAgD,YAAAC,GAMH3C,KAAAE,SAAAyC,QA9GjB,IAAAzD,MAAA0D,oBAmHe,IAASrB,IAAAA,EAAT,EAAmBa,EAAAlD,MAAA0D,oBAAAC,UAAAZ,OAAAG,IAAA,CAC1B,IAAAE,EAAApD,MAAA0D,oBAAAC,UAAAT,GACiBb,EAASuB,OAA1BC,WAAAT,EAAA/C,OAAAwD,WAAA/C,KAAAT,OAAAwD,WACHT,EAAAU,SAAA,CAvHTC,IAAA1B,EAAAuB,UAHJP,MAAAhB,EAAAgB,MA+GgCW,YAAa3B,EAAS2B,YACtBV,SAAUjB,EAASkB,mBAOvCU,UAAW,SAAS5B,GAEhBrC,MAAMkE,WAAW7B,EAASuB,cAzH1C,CA4HGO","file":"QuickPostWidget.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.QuickPostWidget = Garnish.Base.extend(\n        {\n            params: null,\n            initFields: null,\n            $widget: null,\n            $form: null,\n            $formClone: null,\n            $spinner: null,\n            $errorList: null,\n            loading: false,\n\n            init: function(widgetId, params, initFields) {\n                this.params = params;\n                this.initFields = initFields;\n                this.$widget = $('#widget' + widgetId);\n\n                var $form = this.$widget.find('form:first');\n                this.$formClone = $form.clone();\n                this.initForm($form);\n            },\n\n            initForm: function($form) {\n                this.$form = $form;\n                this.$spinner = this.$form.find('.spinner');\n\n                this.initFields();\n\n                var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\n                    $saveAndContinueEditingBtn = $menuBtn.data('menubtn').menu.$container.find('> ul > li > a');\n\n                $menuBtn.menubtn();\n\n                this.addListener(this.$form, 'submit', 'handleFormSubmit');\n                this.addListener($saveAndContinueEditingBtn, 'click', 'saveAndContinueEditing');\n            },\n\n            handleFormSubmit: function(event) {\n                event.preventDefault();\n\n                this.save($.proxy(this, 'onSave'));\n            },\n\n            saveAndContinueEditing: function() {\n                this.save($.proxy(this, 'gotoEntry'));\n            },\n\n            save: function(callback) {\n                if (this.loading) {\n                    return;\n                }\n\n                this.loading = true;\n                this.$spinner.removeClass('hidden');\n\n                var formData = Garnish.getPostData(this.$form),\n                    data = $.extend({enabled: 1}, formData, this.params);\n\n                Craft.postActionRequest('entries/save-entry', data, $.proxy(function(response, textStatus) {\n                    this.loading = false;\n                    this.$spinner.addClass('hidden');\n\n                    if (this.$errorList) {\n                        this.$errorList.children().remove();\n                    }\n\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\n                            callback(response);\n                        }\n                        else {\n                            Craft.cp.displayError(Craft.t('app', 'Couldnâ€™t save entry.'));\n\n                            if (response.errors) {\n                                if (!this.$errorList) {\n                                    this.$errorList = $('<ul class=\"errors\"/>').insertAfter(this.$form);\n                                }\n\n                                for (var attribute in response.errors) {\n                                    if (!response.errors.hasOwnProperty(attribute)) {\n                                        continue;\n                                    }\n\n                                    for (var i = 0; i < response.errors[attribute].length; i++) {\n                                        var error = response.errors[attribute][i];\n                                        $('<li>' + error + '</li>').appendTo(this.$errorList);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }, this));\n            },\n\n            onSave: function(response) {\n                // Reset the widget\n                var $newForm = this.$formClone.clone();\n                this.$form.replaceWith($newForm);\n                this.initForm($newForm);\n\n                // Are there any Recent Entries widgets to notify?\n                if (typeof Craft.RecentEntriesWidget !== 'undefined') {\n                    for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\n                        var widget = Craft.RecentEntriesWidget.instances[i];\n                        if (!widget.params.sectionId || widget.params.sectionId == this.params.sectionId) {\n                            widget.addEntry({\n                                url: response.cpEditUrl,\n                                title: response.title,\n                                dateCreated: response.dateCreated,\n                                username: response.authorUsername\n                            });\n                        }\n                    }\n                }\n            },\n\n            gotoEntry: function(response) {\n                // Redirect to the entry's edit URL\n                Craft.redirectTo(response.cpEditUrl);\n            }\n        });\n})(jQuery);\n"]}