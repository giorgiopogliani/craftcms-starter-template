{"version":3,"sources":["login/src/login.js"],"names":["$","LoginForm","Garnish","Base","extend","$form","$loginNameInput","$passwordInput","$rememberMeCheckbox","$forgotPasswordLink","$rememberPasswordLink","$submitBtn","$spinner","$errors","validateOnInput","PasswordInput","onToggleInput","$newPasswordInput","addListener","this","removeListener","loginNameVal","validate","val","length","window","useEmailAsUsername","Craft","t","match","forgotPassword","passwordLength","minPasswordLength","attribute","min","maxPasswordLength","max","onInput","clearErrors","event","error","preventDefault","showError","addClass","removeClass","submitForgotPassword","MessageSentModal","loginName","postActionRequest","data","proxy","response","textStatus","onSubmitResponse","success","location","shake","rememberMe","prop","href","returnUrl","isMobileBrowser","appendTo","$container","empty","onSwitchForm","trigger","toggleClass","text","Modal","init","$bod","base","hide","jQuery"],"mappings":"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","file":"login.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var LoginForm = Garnish.Base.extend(\n        {\n            $form: null,\n            $loginNameInput: null,\n            $passwordInput: null,\n            $rememberMeCheckbox: null,\n            $forgotPasswordLink: null,\n            $rememberPasswordLink: null,\n            $submitBtn: null,\n            $spinner: null,\n            $errors: null,\n\n            forgotPassword: false,\n            validateOnInput: false,\n\n            init: function() {\n                this.$form = $('#login-form');\n                this.$loginNameInput = $('#loginName');\n                this.$passwordInput = $('#password');\n                this.$rememberMeCheckbox = $('#rememberMe');\n                this.$forgotPasswordLink = $('#forgot-password');\n                this.$rememberPasswordLink = $('#remember-password');\n                this.$submitBtn = $('#submit');\n                this.$spinner = $('#spinner');\n                this.$errors = $('#login-errors');\n\n                new Craft.PasswordInput(this.$passwordInput, {\n                    onToggleInput: $.proxy(function($newPasswordInput) {\n                        this.removeListener(this.$passwordInput, 'input');\n                        this.$passwordInput = $newPasswordInput;\n                        this.addListener(this.$passwordInput, 'input', 'onInput');\n                    }, this)\n                });\n\n                this.addListener(this.$loginNameInput, 'input', 'onInput')\n                this.addListener(this.$passwordInput, 'input', 'onInput');\n                this.addListener(this.$forgotPasswordLink, 'click', 'onSwitchForm');\n                this.addListener(this.$rememberPasswordLink, 'click', 'onSwitchForm');\n                this.addListener(this.$form, 'submit', 'onSubmit');\n            },\n\n            validate: function() {\n                const loginNameVal = this.$loginNameInput.val();\n                if (loginNameVal.length === 0) {\n                    if (window.useEmailAsUsername) {\n                        return Craft.t('app', 'Invalid email.');\n                    }\n                    return Craft.t('app', 'Invalid username or email.');\n                }\n\n                if (window.useEmailAsUsername && !loginNameVal.match('.+@.+\\..+')) {\n                    return Craft.t('app', 'Invalid email.');\n                }\n\n                if (!this.forgotPassword) {\n                    const passwordLength = this.$passwordInput.val().length;\n                    if (passwordLength < window.minPasswordLength) {\n                        return Craft.t('yii', '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.', {\n                            attribute: Craft.t('app', 'Password'),\n                            min: window.minPasswordLength,\n                        });\n                    }\n                    if (passwordLength > window.maxPasswordLength) {\n                        return Craft.t('yii', '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.', {\n                            attribute: Craft.t('app', 'Password'),\n                            max: window.maxPasswordLength,\n                        });\n                    }\n                }\n\n                return true;\n            },\n\n            onInput: function(event) {\n                if (this.validateOnInput && this.validate() === true) {\n                    this.clearErrors();\n                }\n            },\n\n            onSubmit: function(event) {\n                // Prevent full HTTP submits\n                event.preventDefault();\n\n                const error = this.validate();\n                if (error !== true) {\n                    this.showError(error);\n                    this.validateOnInput = true;\n                    return;\n                }\n\n                this.$submitBtn.addClass('active');\n                this.$spinner.removeClass('hidden');\n\n                this.clearErrors();\n\n                if (this.forgotPassword) {\n                    this.submitForgotPassword();\n                }\n                else {\n                    this.submitLogin();\n                }\n            },\n\n            submitForgotPassword: function() {\n                var data = {\n                    loginName: this.$loginNameInput.val()\n                };\n\n                Craft.postActionRequest('users/send-password-reset-email', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            new MessageSentModal();\n                        }\n                        else {\n                            this.showError(response.error);\n                        }\n                    }\n\n                    this.onSubmitResponse();\n                }, this));\n            },\n\n            submitLogin: function() {\n                var data = {\n                    loginName: this.$loginNameInput.val(),\n                    password: this.$passwordInput.val(),\n                    rememberMe: (this.$rememberMeCheckbox.prop('checked') ? 'y' : '')\n                };\n\n                Craft.postActionRequest('users/login', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            window.location.href = response.returnUrl;\n                        }\n                        else {\n                            Garnish.shake(this.$form);\n                            this.onSubmitResponse();\n\n                            // Add the error message\n                            this.showError(response.error);\n                        }\n                    }\n                    else {\n                        this.onSubmitResponse();\n                    }\n                }, this));\n\n                return false;\n            },\n\n            onSubmitResponse: function() {\n                this.$submitBtn.removeClass('active');\n                this.$spinner.addClass('hidden');\n            },\n\n            showError: function(error) {\n                this.clearErrors();\n\n                $('<p style=\"display: none;\">' + error + '</p>')\n                    .appendTo(this.$errors)\n                    .velocity('fadeIn');\n            },\n\n            clearErrors: function() {\n                this.$errors.empty();\n            },\n\n            onSwitchForm: function(event) {\n                if (!Garnish.isMobileBrowser()) {\n                    this.$loginNameInput.trigger('focus');\n                }\n\n                this.clearErrors();\n\n                this.forgotPassword = !this.forgotPassword;\n\n                this.$form.toggleClass('reset-password', this.forgotPassword);\n                this.$submitBtn.text(Craft.t('app', this.forgotPassword ? 'Reset Password': 'Login'));\n            },\n        });\n\n\n    var MessageSentModal = Garnish.Modal.extend(\n        {\n            init: function() {\n                var $container = $('<div class=\"modal fitted email-sent\"><div class=\"body\">' + Craft.t('app', 'Check your email for instructions to reset your password.') + '</div></div>')\n                    .appendTo(Garnish.$bod);\n\n                this.base($container);\n            },\n\n            hide: function() {\n            }\n        });\n\n\n    new LoginForm();\n})(jQuery);\n"]}