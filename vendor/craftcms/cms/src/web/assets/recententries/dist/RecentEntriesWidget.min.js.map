{"version":3,"sources":["recententries/src/RecentEntriesWidget.js"],"names":["$","Craft","RecentEntriesWidget","Garnish","Base","extend","params","$widget","$body","$container","$tbody","hasEntries","widgetId","this","find","data","on","proxy","css","instances","push","addEntry","entry","$table","oldHeight","height","prependTo","newHeight","appendTo","prepend","url","escapeHtml","title","dateCreated","formatDate","username","edition","Pro","velocity","props","heightDiff","margin-top","destroy","splice","inArray","base","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,oBAAAC,QAAAC,KAAAC,OACMH,CAEUI,OADZ,KAEWC,QAFX,KAGWC,MAHX,KAIIC,WAJJ,KAKYC,OALZ,KAMIC,WANJ,KASaL,KAAL,SAAAM,EAAAN,GACKC,KAAUP,OAAEM,EACjBO,KAAaN,QAAAP,EAAac,UAAKF,GAC1BH,KAALD,MAAuBD,KAAAA,QAAaO,KAAA,eAC/BJ,KAASD,WAAKA,KAAWK,QAAKA,KAAA,kCAC9BH,KAALD,OAAoBG,KAAKH,WAAzBI,KAAA,eAEKP,KAAQQ,aAAbF,KAA+BH,OAAWV,OAhBlDa,KAAAN,QAAAQ,KAAA,UAAAC,GAAA,UAAAhB,EAAAiB,MAAAJ,KAAA,YAsBaJ,MAAWS,oBAAhBC,UAAAC,KAAAP,OAIKQ,SAAKV,SAAYW,GAClBT,KAAAJ,WAAAS,IAAA,aAAA,GACIK,IAAMC,EAAKX,KAAAJ,WAAAgB,SAFnB,IAAKZ,KAAKF,WAAY,CAqBT,IAAGY,EAAKd,EAAAA,mCAArBiB,UAAAb,KAAAJ,YACcI,KAAGc,OAAS3B,EAAGwB,YAD7BI,SAAAL,GAKaV,KAAAH,OAAcmB,QAE3B,oBACsBP,EAAAQ,IAAA,KAAA7B,MAAA8B,WAAAT,EAAAU,OADtB,4BAGSrB,MAAaoB,YACrBT,EAAAW,YAAAhC,MAAAiC,WAAAZ,EAAAW,aAAA,KAnBQX,EAAMW,aAAeX,EAAMa,UAAYlC,MAAMmC,SAAWnC,MAAMoC,IAAM,KAAO,KAqBpEC,EAASC,UAAzBtC,MAAAmC,SAAAnC,MAAAoC,IAAAf,EAAAa,SAAA,KANA,qBAcO,IArEnBK,EAqEmB3B,KAAAJ,WAAAgB,SArEnBD,EAmDYX,KAAKJ,WAAWS,IAAI,cAAesB,GAEnC,IAAID,EAAQ,CAACE,aAAc,GAGtB5B,KAAKF,aACN4B,EAAM,kBAAoBf,EAC1BX,KAAKF,YAAa,GAGtBE,KAAKJ,WAAW6B,SAASC,IAG7BG,QAAS,WACLzC,MAAMC,oBAAoBiB,UAAUwB,OAAO3C,EAAE4C,QAAQ/B,KAAMZ,MAAMC,oBAAoBiB,WAAY,GACjGN,KAAKgC,SAEV,CACC1B,UAAW,KAxEvB,CA0EG2B","file":"RecentEntriesWidget.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.RecentEntriesWidget = Garnish.Base.extend(\n        {\n            params: null,\n            $widget: null,\n            $body: null,\n            $container: null,\n            $tbody: null,\n            hasEntries: null,\n\n            init: function(widgetId, params) {\n                this.params = params;\n                this.$widget = $('#widget' + widgetId);\n                this.$body = this.$widget.find('.body:first');\n                this.$container = this.$widget.find('.recententries-container:first');\n                this.$tbody = this.$container.find('tbody:first');\n                this.hasEntries = !!this.$tbody.length;\n\n                this.$widget.data('widget').on('destroy', $.proxy(this, 'destroy'));\n\n                Craft.RecentEntriesWidget.instances.push(this);\n            },\n\n            addEntry: function(entry) {\n                this.$container.css('margin-top', 0);\n                var oldHeight = this.$container.height();\n\n\n                if (!this.hasEntries) {\n                    // Create the table first\n                    var $table = $('<table class=\"data fullwidth\"/>').prependTo(this.$container);\n                    this.$tbody = $('<tbody/>').appendTo($table);\n                }\n\n                this.$tbody.prepend(\n                    '<tr>' +\n                    '<td>' +\n                    '<a href=\"' + entry.url + '\">' + Craft.escapeHtml(entry.title) + '</a> ' +\n                    '<span class=\"light\">' +\n                    Craft.escapeHtml(\n                        (entry.dateCreated ? Craft.formatDate(entry.dateCreated) : '') +\n                        (entry.dateCreated && entry.username && Craft.edition == Craft.Pro ? ', ' : '') +\n                        (entry.username && Craft.edition == Craft.Pro ? entry.username : '')\n                    ) +\n                    '</span>' +\n                    '</td>' +\n                    '</tr>'\n                );\n\n                var newHeight = this.$container.height(),\n                    heightDiff = newHeight - oldHeight;\n\n                this.$container.css('margin-top', -heightDiff);\n\n                var props = {'margin-top': 0};\n\n                // Also animate the \"No entries exist\" text out of view\n                if (!this.hasEntries) {\n                    props['margin-bottom'] = -oldHeight;\n                    this.hasEntries = true;\n                }\n\n                this.$container.velocity(props);\n            },\n\n            destroy: function() {\n                Craft.RecentEntriesWidget.instances.splice($.inArray(this, Craft.RecentEntriesWidget.instances), 1);\n                this.base();\n            }\n        }, {\n            instances: []\n        });\n})(jQuery);\n"]}