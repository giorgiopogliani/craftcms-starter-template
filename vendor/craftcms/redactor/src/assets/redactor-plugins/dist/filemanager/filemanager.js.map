{"version":3,"sources":["filemanager/filemanager.js"],"names":["$R","add","translations","en","choose","init","app","this","lang","opts","onmodal","file","open","$modal","$form","fileManagerJson","_load","$body","getBody","$box","dom","attr","get","addClass","hide","css","overflow","height","line-height","append","ajax","url","success","_parse","bind","data","$ul","key","obj","$li","$item","encodeURI","JSON","stringify","text","title","name","on","_insert","$name","$size","size","e","preventDefault","$el","target","closest","parse","decodeURI","api","Redactor"],"mappings":"CAAA,SAAUA,GAENA,EAAGC,IAAI,SAAU,cAAe,CAC5BC,aAAc,CAChBC,GAAI,CACHC,OAAU,WAGTC,KAAM,SAASC,GAEXC,KAAKD,IAAMA,EACXC,KAAKC,KAAOF,EAAIE,KAChBD,KAAKE,KAAOH,EAAIG,MAGnBC,QAAS,CACNC,KAAM,CACFC,KAAM,SAASC,EAAQC,GAEdP,KAAKE,KAAKM,iBACfR,KAAKS,MAAMH,MAM7BG,MAAO,SAASH,GAEf,IAAII,EAAQJ,EAAOK,UAEnBX,KAAKY,KAAOnB,EAAGoB,IAAI,SACnBb,KAAKY,KAAKE,KAAK,aAAcd,KAAKC,KAAKc,IAAI,WAC3Cf,KAAKY,KAAKI,SAAS,sBACnBhB,KAAKY,KAAKK,OACVjB,KAAKY,KAAKM,IAAI,CACVC,SAAU,OACVC,OAAQ,QACRC,cAAe,IAGnBX,EAAMY,OAAOtB,KAAKY,MAElBnB,EAAG8B,KAAKR,IAAI,CACLS,IAAKxB,KAAKE,KAAKM,gBACfiB,QAASzB,KAAK0B,OAAOC,KAAK3B,SAGlC0B,OAAQ,SAASE,GAEP,IAAIC,EAAMpC,EAAGoB,IAAI,uCACjB,IAAK,IAAIiB,KAAOF,EAChB,CACI,IAAIG,EAAMH,EAAKE,GACf,GAAmB,iBAARC,EAAX,CAEA,IAAIC,EAAMvC,EAAGoB,IAAI,QACboB,EAAQxC,EAAGoB,IAAI,OACnBoB,EAAMnB,KAAK,OAAQ,KACnBmB,EAAMjB,SAAS,8BACfiB,EAAMnB,KAAK,cAAeoB,UAAUC,KAAKC,UAAUL,KACnDE,EAAMI,KAAKN,EAAIO,OAASP,EAAIQ,MACxCN,EAAMO,GAAG,QAASxC,KAAKyC,QAAQd,KAAK3B,OAExB,IAAI0C,EAAQjD,EAAGoB,IAAI,UACnB6B,EAAM1B,SAAS,eACf0B,EAAML,KAAKN,EAAIQ,MACfN,EAAMX,OAAOoB,GAEb,IAAIC,EAAQlD,EAAGoB,IAAI,UACnB8B,EAAM3B,SAAS,eACf2B,EAAMN,KAAK,IAAMN,EAAIa,KAAO,KAC5BX,EAAMX,OAAOqB,GAEzBX,EAAIV,OAAOW,GACXJ,EAAIP,OAAOU,IAGHhC,KAAKY,KAAKU,OAAOO,IAE3BY,QAAS,SAASI,GAEjBA,EAAEC,iBAEF,IAAIC,EAAMtD,EAAGoB,IAAIgC,EAAEG,QAAQC,QAAQ,+BAC/BrB,EAAOO,KAAKe,MAAMC,UAAUJ,EAAIjC,KAAK,iBAEzCd,KAAKD,IAAIqD,IAAI,qBAAsB,CAAEhD,KAAMwB,OAtF9C,CAyFGyB","file":"filemanager.js","sourcesContent":["(function($R)\n{\n    $R.add('plugin', 'filemanager', {\n        translations: {\n    \t\ten: {\n    \t\t\t\"choose\": \"Choose\"\n    \t\t}\n        },\n        init: function(app)\n        {\n            this.app = app;\n            this.lang = app.lang;\n            this.opts = app.opts;\n        },\n        // messages\n         onmodal: {\n            file: {\n                open: function($modal, $form)\n                {\n                    if (!this.opts.fileManagerJson) return;\n                    this._load($modal)\n                }\n            }\n        },\n\n\t\t// private\n\t\t_load: function($modal)\n\t\t{\n\t\t\tvar $body = $modal.getBody();\n\n\t\t\tthis.$box = $R.dom('<div>');\n\t\t\tthis.$box.attr('data-title', this.lang.get('choose'));\n\t\t\tthis.$box.addClass('redactor-modal-tab');\n\t\t\tthis.$box.hide();\n\t\t\tthis.$box.css({\n    \t\t\toverflow: 'auto',\n    \t\t\theight: '300px',\n    \t\t\t'line-height': 1\n\t\t\t});\n\n\t\t\t$body.append(this.$box);\n\n\t\t\t$R.ajax.get({\n        \t\turl: this.opts.fileManagerJson,\n        \t\tsuccess: this._parse.bind(this)\n    \t\t});\n\t\t},\n\t\t_parse: function(data)\n\t\t{\n            var $ul = $R.dom('<ul id=\"redactor-filemanager-list\">');\n            for (var key in data)\n            {\n                var obj = data[key];\n                if (typeof obj !== 'object') continue;\n\n                var $li = $R.dom('<li>');\n                var $item = $R.dom('<a>');\n                $item.attr('href', '#');\n                $item.addClass('redactor-file-manager-link');\n                $item.attr('data-params', encodeURI(JSON.stringify(obj)));\n                $item.text(obj.title || obj.name);\n\t\t\t\t$item.on('click', this._insert.bind(this));\n\n                var $name = $R.dom('<span>');\n                $name.addClass('r-file-name');\n                $name.text(obj.name);\n                $item.append($name);\n\n                var $size = $R.dom('<span>');\n                $size.addClass('r-file-size');\n                $size.text('(' + obj.size + ')');\n                $item.append($size);\n\n\t\t\t\t$li.append($item);\n\t\t\t\t$ul.append($li);\n            }\n\n            this.$box.append($ul);\n\t\t},\n\t\t_insert: function(e)\n\t\t{\n\t\t\te.preventDefault();\n\n\t\t\tvar $el = $R.dom(e.target).closest('.redactor-file-manager-link');\n\t\t\tvar data = JSON.parse(decodeURI($el.attr('data-params')));\n\n\t\t\tthis.app.api('module.file.insert', { file: data });\n\t\t}\n    });\n})(Redactor);"]}