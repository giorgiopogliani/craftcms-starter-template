{"version":3,"sources":["alignment/alignment.js"],"names":["Redactor","add","translations","en","align","align-left","align-center","align-right","align-justify","init","app","this","opts","lang","block","toolbar","start","dropdown","left","title","get","api","args","center","right","justify","$button","addButton","setIcon","setDropdown","set","type","direction","_remove","style","text-align","toggle","remove"],"mappings":"AAsDGA,SApDIC,IAAI,SAAU,YAAa,CAC1BC,aAAc,CAChBC,GAAI,CACHC,MAAS,QACTC,aAAc,aACdC,eAAgB,eAChBC,cAAe,cACfC,gBAAiB,kBAGhBC,KAAM,SAASC,GAEXC,KAAKD,IAAMA,EACXC,KAAKC,KAAOF,EAAIE,KAChBD,KAAKE,KAAOH,EAAIG,KAChBF,KAAKG,MAAQJ,EAAII,MACjBH,KAAKI,QAAUL,EAAIK,SAGvBC,MAAO,WAEH,IAAIC,EAAW,GAErBA,EAASC,KAAO,CAAEC,MAAOR,KAAKE,KAAKO,IAAI,cAAeC,IAAK,uBAAwBC,KAAM,QACzFL,EAASM,OAAS,CAAEJ,MAAOR,KAAKE,KAAKO,IAAI,gBAAiBC,IAAK,uBAAwBC,KAAM,UAC7FL,EAASO,MAAQ,CAAEL,MAAOR,KAAKE,KAAKO,IAAI,eAAgBC,IAAK,uBAAwBC,KAAM,SAC3FL,EAASQ,QAAU,CAAEN,MAAOR,KAAKE,KAAKO,IAAI,iBAAkBC,IAAK,uBAAwBC,KAAM,WAEzF,IAAII,EAAUf,KAAKI,QAAQY,UAAU,YAAa,CAAER,MAAOR,KAAKE,KAAKO,IAAI,WACzEM,EAAQE,QAAQ,qCACzBF,EAAQG,YAAYZ,IAEfa,IAAK,SAASC,GAEhB,GAAa,SAATA,GAA2C,QAAxBpB,KAAKC,KAAKoB,UAE7B,OAAOrB,KAAKsB,UAGhB,IAAIX,EAAO,CACJY,MAAO,CAAEC,aAAcJ,IAGjCpB,KAAKG,MAAMsB,OAAOd,IAInBW,QAAS,WAELtB,KAAKG,MAAMuB,OAAO,CAAEH,MAAO","file":"alignment.js","sourcesContent":["(function($R)\n{\n    $R.add('plugin', 'alignment', {\n        translations: {\n    \t\ten: {\n    \t\t\t\"align\": \"Align\",\n    \t\t\t\"align-left\": \"Align Left\",\n    \t\t\t\"align-center\": \"Align Center\",\n    \t\t\t\"align-right\": \"Align Right\",\n    \t\t\t\"align-justify\": \"Align Justify\"\n    \t\t}\n        },\n        init: function(app)\n        {\n            this.app = app;\n            this.opts = app.opts;\n            this.lang = app.lang;\n            this.block = app.block;\n            this.toolbar = app.toolbar;\n        },\n        // public\n        start: function()\n        {\n            var dropdown = {};\n\n    \t\tdropdown.left = { title: this.lang.get('align-left'), api: 'plugin.alignment.set', args: 'left' };\n    \t\tdropdown.center = { title: this.lang.get('align-center'), api: 'plugin.alignment.set', args: 'center' };\n    \t\tdropdown.right = { title: this.lang.get('align-right'), api: 'plugin.alignment.set', args: 'right' };\n    \t\tdropdown.justify = { title: this.lang.get('align-justify'), api: 'plugin.alignment.set', args: 'justify' };\n\n            var $button = this.toolbar.addButton('alignment', { title: this.lang.get('align') });\n            $button.setIcon('<i class=\"re-icon-alignment\"></i>');\n\t\t\t$button.setDropdown(dropdown);\n        },\n        set: function(type)\n\t\t{\n    \t\tif (type === 'left' && this.opts.direction === 'ltr')\n    \t\t{\n        \t\treturn this._remove();\n    \t\t}\n\n    \t\tvar args = {\n        \t    style: { 'text-align': type }\n    \t\t};\n\n\t\t\tthis.block.toggle(args);\n\t\t},\n\n\t\t// private\n\t\t_remove: function()\n\t\t{\n\t\t    this.block.remove({ style: 'text-align' });\n\t\t}\n    });\n})(Redactor);"]}