{"version":3,"sources":["textexpander/textexpander.js"],"names":["Redactor","add","init","app","this","opts","utils","editor","marker","keycodes","selection","start","textexpander","getElement","on","_expand","bind","stop","off","e","which","SPACE","len","length","i","str","re","RegExp","escapeRegExp","rangeText","getTextBeforeCaret","replace","_replaceSelection","replacement","current","insert","previousSibling","currentText","textContent","restoreMarkers"],"mappings":"AA+DGA,SA7DIC,IAAI,SAAU,eAAgB,CAC7BC,KAAM,SAASC,GAEXC,KAAKD,IAAMA,EACXC,KAAKC,KAAOF,EAAIE,KAChBD,KAAKE,MAAQH,EAAIG,MACjBF,KAAKG,OAASJ,EAAII,OAClBH,KAAKI,OAASL,EAAIK,OAClBJ,KAAKK,SAAWN,EAAIM,SACpBL,KAAKM,UAAYP,EAAIO,WAGzBC,MAAO,WAEEP,KAAKC,KAAKO,cAEDR,KAAKG,OAAOM,aAC3BC,GAAG,qCAAsCV,KAAKW,QAAQC,KAAKZ,QAEpEa,KAAM,WAEkBb,KAAKG,OAAOM,aAC3BK,IAAI,kCAIbH,QAAS,SAASI,GAGjB,GADmBA,EAAEC,QACThB,KAAKK,SAASY,MAGb,IADT,IAAIC,EAAMlB,KAAKC,KAAKO,aAAaW,OACfC,EAAI,EAAGA,EAAIF,EAAKE,IACzB,CACI,IAAIC,EAAMrB,KAAKC,KAAKO,aAAaY,GACtCE,EAAK,IAAIC,OAAOvB,KAAKE,MAAMsB,aAAaH,EAAI,IAAM,QACzCI,EAAYzB,KAAKM,UAAUoB,mBAAmBL,EAAI,GAAGF,OAAS,GAAGQ,QAAQ,MAAO,IAE7F,GAAIN,EAAI,KAAOI,EAEX,OAAOzB,KAAK4B,kBAAkBN,EAAID,EAAI,MAMnDO,kBAAmB,SAASN,EAAIO,GAE5B,IACUC,EADG9B,KAAKI,OAAO2B,OAAO,SACLC,gBACjBC,EAAcH,EAAQI,YAG7BD,GADGA,EAAcA,EAAYN,QAAQ,SAAU,MACrBA,QAAQL,EAAIO,GACtCC,EAAQI,YAAcD,EAE3BjC,KAAKM,UAAU6B","file":"textexpander.js","sourcesContent":["(function($R)\n{\n    $R.add('plugin', 'textexpander', {\n        init: function(app)\n        {\n            this.app = app;\n            this.opts = app.opts;\n            this.utils = app.utils;\n            this.editor = app.editor;\n            this.marker = app.marker;\n            this.keycodes = app.keycodes;\n            this.selection = app.selection;\n        },\n        // public\n        start: function()\n        {\n            if (!this.opts.textexpander) return;\n\n            var $editor = this.editor.getElement();\n\t\t\t$editor.on('keyup.redactor-plugin-textexpander', this._expand.bind(this));\n\t\t},\n\t\tstop: function()\n\t\t{\n            var $editor = this.editor.getElement();\n\t\t\t$editor.off('.redactor-plugin-textexpander');\n\t\t},\n\n\t\t// private\n\t\t_expand: function(e)\n\t\t{\n            var key = e.which;\n\t\t\tif (key === this.keycodes.SPACE)\n\t\t\t{\n    \t\t\tvar len = this.opts.textexpander.length;\n                for (var i = 0; i < len; i++)\n                {\n                    var str = this.opts.textexpander[i];\n    \t\t\t    var re = new RegExp(this.utils.escapeRegExp(str[0]) + '\\\\s$');\n                    var rangeText = this.selection.getTextBeforeCaret(str[0].length + 1).replace(/\\s$/, '');\n\n    \t\t\t    if (str[0] === rangeText)\n    \t\t\t    {\n        \t\t\t    return this._replaceSelection(re, str[1]);\n    \t\t\t    }\n\n                }\n\t\t\t}\n\t\t},\n\t\t_replaceSelection: function(re, replacement)\n\t\t{\n    \t\tvar marker = this.marker.insert('start');\n            var current = marker.previousSibling;\n            var currentText = current.textContent;\n\n            currentText = currentText.replace(/&nbsp;/, ' ');\n        \tcurrentText = currentText.replace(re, replacement);\n        \tcurrent.textContent = currentText;\n\n \t\t\tthis.selection.restoreMarkers();\n\n            return;\n\t\t}\n    });\n})(Redactor);"]}